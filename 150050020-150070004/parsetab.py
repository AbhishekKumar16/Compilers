
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightUMINUSIDENTIFIER INT FLOAT EQUALS LPAREN RPAREN LCURVE RCURVE MAIN SEMICOLON COMMA STAR AMPERSAND PLUS MINUS DIVIDE IF ELSE AND OR NOT WHILE OPERATOR RETURN INT_VAR FLOAT_VAR VOID\n\tprogram : basic_block program\n\t\t\t| basic_block\n\t\n\tbasic_block : declaration\n\t\t\t\t| fn_declaration\n\t\t\t\t| fn_definition\n\t\n\tfn_declaration : type fn_name LPAREN dec_arg_list RPAREN SEMICOLON\n\t\t\t\t| type fn_name LPAREN arg_list RPAREN SEMICOLON\n\t\t\t\t| VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON\n\t\t\t\t| VOID fn_name LPAREN arg_list RPAREN SEMICOLON\n\t\n\tfn_definition : fn_defn1 fn_defn2\n\t\n\tfn_defn1 : type fn_name LPAREN arg_list RPAREN\n\t\t| VOID fn_name LPAREN arg_list RPAREN\n\t\n\tfn_defn2 : LCURVE fn_body RCURVE\n\t\n\tfn_name : star MAIN\n\t\t\t| variable\n\t\n\tstar : STAR star\n\t\t|\n\t\n\tfn_body : fn_line fn_body\n\t\t\t| \n\t\n\tfn_line : declaration\n\t\t\t| stmt\n\t\t\t| fn_call SEMICOLON\n\t\n\treturn_stmt : RETURN E1 SEMICOLON\n\t\t\t\t| RETURN SEMICOLON\n\t\n\tfn_call : IDENTIFIER LPAREN fn_call_args RPAREN \n\t\n\tfn_call_args : E1 fn_call_args_list\n\t\t\t\t|\n\t\n\tfn_call_args_list : COMMA E1 fn_call_args_list\n\t\t\t\t\t| \n\t\n\ttype : INT_VAR\n\t\t| FLOAT_VAR\n\t\n\tdec_arg_list : type star dec_multiple_arg \n\t\n\tdec_multiple_arg : COMMA type star dec_multiple_arg\n\t\t\t\t| \n\t\n\targ_list : type variable multiple_arg\n\t\t\t| \n\t\n\tmultiple_arg : COMMA type variable multiple_arg\n\t\t\t\t| \n\t\n\tdeclaration : type list SEMICOLON\n\t\n\tlist : list COMMA variable\n\t\t| variable\n\t\n\tvariable : IDENTIFIER\n\t\t\t| STAR variable\n\t\n\tstmt : matched_stmt\n\t\t| unmatched_stmt\n\t\n\tmatched_stmt : IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt\n\t\t\t\t| IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt\n\t\t\t\t| LCURVE stmt_list RCURVE\n\t\t\t\t| expr\n\t\t\t\t| return_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN matched_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN SEMICOLON\n\t\n\tunmatched_stmt : IF LPAREN condition RPAREN stmt\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN unmatched_stmt\n\t\n\tstmt_list : stmt stmt_list\n\t\t\t| stmt\n\t\n\tcondition : condition AND condition\n\t\t\t| condition OR condition\n\t\t\t| E1 OPERATOR E1 \n\t\t\t| LPAREN condition RPAREN\n\t\t\t| NOT condition\n\t\n\texpr : id EQUALS E1 SEMICOLON\n\t\t| STAR left_side EQUALS E1 SEMICOLON\n\t\n\tleft_side : id\n\t\t\t| star_ampersand id\n\t\n\tE1 : E1 PLUS E2\n\t\t| E1 MINUS E2\n\t\t| E2\n\t\n\tE2 : E2 STAR E3\n\t\t| E2 DIVIDE E3\n\t\t| E3\n\t\n\tE3 : LPAREN E1 RPAREN\n\t\t| mixed_id\n\t\n\tmixed_id : star_ampersand id\n\t\t\t| id\n\t\t\t| MINUS mixed_id %prec UMINUS\n\t\t\t| INT\n\t\t\t| FLOAT\n\t\t\t| fn_call\n\t\t\t| star_ampersand fn_call\n\t\n\tstar_ampersand : STAR star_ampersand\n\t\t\t\t\t| STAR\n\t\t\t\t\t| AMPERSAND\n\t\n\tid : IDENTIFIER\n\t'
    
_lr_action_items = {'AND':([52,54,57,58,59,60,61,66,85,89,90,98,104,112,117,118,121,122,123,124,125,137,138,139,143,],[-76,-80,-83,-89,-73,-78,-84,-82,113,-85,-79,-81,113,-66,113,-25,-71,-72,-74,-75,-77,-64,-62,113,-65,]),'IF':([12,25,26,27,28,29,34,35,36,44,51,65,70,93,100,115,126,128,140,141,142,145,146,147,148,151,152,157,158,159,160,161,162,],[24,-44,-45,-51,24,-20,24,-52,-21,-39,-22,-24,24,-23,-50,24,-67,24,-44,-55,-56,-68,-59,-53,-54,24,24,-57,-46,-47,-58,-49,-48,]),'RETURN':([12,25,26,27,28,29,34,35,36,44,51,65,70,93,100,115,126,128,140,141,142,145,146,147,148,151,152,157,158,159,160,161,162,],[32,-44,-45,-51,32,-20,32,-52,-21,-39,-22,-24,32,-23,-50,32,-67,32,-44,-55,-56,-68,-59,-53,-54,32,32,-57,-46,-47,-58,-49,-48,]),'MAIN':([2,5,7,10,14,17,22,42,],[-30,-17,-31,-17,40,-17,-17,-16,]),'ELSE':([27,35,65,93,100,126,140,142,145,147,148,158,159,161,162,],[-51,-52,-24,-23,-50,-67,151,152,-68,-53,-54,-46,-47,-49,-48,]),'EQUALS':([30,33,69,71,73,103,],[-89,67,-89,102,-69,-70,]),'RPAREN':([2,7,13,17,41,42,43,46,50,52,54,57,58,59,60,61,66,77,78,79,81,82,85,87,88,89,90,97,98,104,107,108,112,116,117,118,119,121,122,123,124,125,132,134,137,138,139,143,144,149,153,154,155,156,163,164,],[-30,-31,-42,-17,-36,-16,-43,-36,-27,-76,-80,-83,-89,-73,-78,-84,-82,105,106,-17,109,110,115,118,-29,-85,-79,125,-81,128,-34,-38,-66,125,143,-25,-26,-71,-72,-74,-75,-77,-32,-35,-64,-62,-63,-65,-29,-17,-28,-17,-34,-38,-33,-37,]),'INT_VAR':([0,4,6,8,9,11,12,25,26,27,28,29,35,36,41,44,46,47,51,65,93,100,126,129,130,131,133,135,136,140,141,142,145,146,147,148,157,158,159,160,161,162,],[2,-5,-4,-3,2,-10,2,-44,-45,-51,2,-20,-52,-21,2,-39,2,-13,-22,-24,-23,-50,-67,-9,-8,2,2,-7,-6,-44,-55,-56,-68,-59,-53,-54,-57,-46,-47,-58,-49,-48,]),'DIVIDE':([52,54,57,58,59,60,61,66,89,90,98,118,121,122,123,124,125,],[-76,-80,-83,-89,95,-78,-84,-82,-85,-79,-81,-25,95,95,-74,-75,-77,]),'RCURVE':([12,23,25,26,27,28,29,35,36,44,49,51,65,68,70,93,100,101,126,140,141,142,145,146,147,148,157,158,159,160,161,162,],[-19,47,-44,-45,-51,-19,-20,-52,-21,-39,-18,-22,-24,100,-61,-23,-50,-60,-67,-44,-55,-56,-68,-59,-53,-54,-57,-46,-47,-58,-49,-48,]),'OPERATOR':([52,54,57,58,59,60,61,66,83,89,90,98,116,118,121,122,123,124,125,],[-76,-80,-83,-89,-73,-78,-84,-82,111,-85,-79,-81,111,-25,-71,-72,-74,-75,-77,]),'FLOAT_VAR':([0,4,6,8,9,11,12,25,26,27,28,29,35,36,41,44,46,47,51,65,93,100,126,129,130,131,133,135,136,140,141,142,145,146,147,148,157,158,159,160,161,162,],[7,-5,-4,-3,7,-10,7,-44,-45,-51,7,-20,-52,-21,7,-39,7,-13,-22,-24,-23,-50,-67,-9,-8,7,7,-7,-6,-44,-55,-56,-68,-59,-53,-54,-57,-46,-47,-58,-49,-48,]),'NOT':([48,76,84,86,113,114,],[84,84,84,84,84,84,]),'WHILE':([12,25,26,27,28,29,34,35,36,44,51,65,70,93,100,115,126,128,140,141,142,145,146,147,148,151,152,157,158,159,160,161,162,],[39,-44,-45,-51,39,-20,39,-52,-21,-39,-22,-24,39,-23,-50,39,-67,39,-44,-55,-56,-68,-59,-53,-54,39,39,-57,-46,-47,-58,-49,-48,]),'MINUS':([32,48,50,52,54,56,57,58,59,60,61,63,64,66,67,76,83,84,86,88,89,90,91,92,94,95,97,98,99,102,111,113,114,116,118,120,121,122,123,124,125,127,137,144,],[64,64,64,-76,-80,92,-83,-89,-73,-78,-84,64,64,-82,64,64,92,64,64,92,-85,-79,64,64,64,64,92,-81,92,64,64,64,64,92,-25,64,-71,-72,-74,-75,-77,92,92,92,]),'INT':([32,48,50,63,64,67,76,84,86,91,92,94,95,102,111,113,114,120,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'PLUS':([52,54,56,57,58,59,60,61,66,83,88,89,90,97,98,99,116,118,121,122,123,124,125,127,137,144,],[-76,-80,91,-83,-89,-73,-78,-84,-82,91,91,-85,-79,91,-81,91,91,-25,-71,-72,-74,-75,-77,91,91,91,]),'IDENTIFIER':([2,5,7,10,12,17,22,25,26,27,28,29,32,34,35,36,37,38,44,45,48,50,51,53,55,62,63,64,65,67,70,72,74,76,79,84,86,91,92,93,94,95,96,100,102,111,113,114,115,120,126,128,140,141,142,145,146,147,148,150,151,152,157,158,159,160,161,162,],[-30,13,-31,13,30,13,13,-44,-45,-51,30,-20,58,69,-52,-21,69,13,-39,13,58,58,-22,58,-88,-87,58,58,-24,58,69,69,13,58,13,58,58,58,58,-23,58,58,-86,-50,58,58,58,58,69,58,-67,69,-44,-55,-56,-68,-59,-53,-54,13,69,69,-57,-46,-47,-58,-49,-48,]),'COMMA':([2,7,13,17,19,20,42,43,52,54,57,58,59,60,61,66,75,79,80,88,89,90,98,107,108,118,121,122,123,124,125,144,149,154,155,156,],[-30,-31,-42,-17,-41,45,-16,-43,-76,-80,-83,-89,-73,-78,-84,-82,-41,-17,-40,120,-85,-79,-81,131,133,-25,-71,-72,-74,-75,-77,120,-17,-17,131,133,]),'AMPERSAND':([32,37,48,50,62,63,64,67,76,84,86,91,92,94,95,102,111,113,114,120,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'$end':([1,4,6,8,9,11,18,44,47,129,130,135,136,],[0,-5,-4,-3,-2,-10,-1,-39,-13,-9,-8,-7,-6,]),'FLOAT':([32,48,50,63,64,67,76,84,86,91,92,94,95,102,111,113,114,120,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'LCURVE':([3,12,25,26,27,28,29,34,35,36,44,51,65,70,93,100,105,109,115,126,128,140,141,142,145,146,147,148,151,152,157,158,159,160,161,162,],[12,34,-44,-45,-51,34,-20,34,-52,-21,-39,-22,-24,34,-23,-50,-12,-11,34,-67,34,-44,-55,-56,-68,-59,-53,-54,34,34,-57,-46,-47,-58,-49,-48,]),'VOID':([0,4,6,8,9,11,44,47,129,130,135,136,],[5,-5,-4,-3,5,-10,-39,-13,-9,-8,-7,-6,]),'STAR':([2,5,7,10,12,17,22,25,26,27,28,29,32,34,35,36,37,38,44,45,48,50,51,52,54,57,58,59,60,61,62,63,64,65,66,67,70,74,76,79,84,86,89,90,91,92,93,94,95,98,100,102,111,113,114,115,118,120,121,122,123,124,125,126,128,140,141,142,145,146,147,148,149,150,151,152,154,157,158,159,160,161,162,],[-30,17,-31,22,37,17,22,-44,-45,-51,37,-20,62,37,-52,-21,62,74,-39,74,62,62,-22,-76,-80,-83,-89,94,-78,-84,62,62,62,-24,-82,62,37,74,62,17,62,62,-85,-79,62,62,-23,62,62,-81,-50,62,62,62,62,37,-25,62,94,94,-74,-75,-77,-67,37,-44,-55,-56,-68,-59,-53,-54,154,74,37,37,154,-57,-46,-47,-58,-49,-48,]),'LPAREN':([13,15,16,19,21,24,30,32,39,40,43,48,50,58,63,67,76,84,86,91,92,94,95,102,111,113,114,120,],[-42,-15,41,-15,46,48,50,63,76,-14,-43,86,63,50,63,63,86,86,86,63,63,63,63,63,63,86,86,63,]),'OR':([52,54,57,58,59,60,61,66,85,89,90,98,104,112,117,118,121,122,123,124,125,137,138,139,143,],[-76,-80,-83,-89,-73,-78,-84,-82,114,-85,-79,-81,114,-66,114,-25,-71,-72,-74,-75,-77,-64,-62,-63,-65,]),'SEMICOLON':([13,19,20,31,32,43,52,54,56,57,58,59,60,61,66,75,80,89,90,98,99,105,106,109,110,115,118,121,122,123,124,125,127,128,151,152,],[-42,-41,44,51,65,-43,-76,-80,93,-83,-89,-73,-78,-84,-82,-41,-40,-85,-79,-81,126,129,130,135,136,142,-25,-71,-72,-74,-75,-77,145,148,159,162,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fn_body':([12,28,],[23,49,]),'fn_call_args_list':([88,144,],[119,153,]),'E3':([32,48,50,63,67,76,84,86,91,92,94,95,102,111,113,114,120,],[52,52,52,52,52,52,52,52,52,52,123,124,52,52,52,52,52,]),'dec_multiple_arg':([107,155,],[132,163,]),'fn_defn1':([0,9,],[3,3,]),'E1':([32,48,50,63,67,76,84,86,102,111,113,114,120,],[56,83,88,97,99,83,83,116,127,137,83,83,144,]),'variable':([5,10,17,22,38,45,74,79,150,],[15,19,43,43,75,80,43,108,156,]),'expr':([12,28,34,70,115,128,151,152,],[27,27,27,27,27,27,27,27,]),'fn_defn2':([3,],[11,]),'fn_line':([12,28,],[28,28,]),'E2':([32,48,50,63,67,76,84,86,91,92,102,111,113,114,120,],[59,59,59,59,59,59,59,59,121,122,59,59,59,59,59,]),'list':([10,38,],[20,20,]),'star_ampersand':([32,37,48,50,62,63,64,67,76,84,86,91,92,94,95,102,111,113,114,120,],[53,72,53,53,96,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'matched_stmt':([12,28,34,70,115,128,151,152,],[25,25,25,25,140,147,158,161,]),'dec_arg_list':([41,46,],[78,82,]),'fn_name':([5,10,],[16,21,]),'declaration':([0,9,12,28,],[8,8,29,29,]),'arg_list':([41,46,],[77,81,]),'stmt_list':([34,70,],[68,101,]),'type':([0,9,12,28,41,46,131,133,],[10,10,38,38,79,79,149,150,]),'program':([0,9,],[1,18,]),'fn_call':([12,28,32,48,50,53,63,64,67,76,84,86,91,92,94,95,102,111,113,114,120,],[31,31,61,61,61,89,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'star':([5,10,17,22,79,149,154,],[14,14,42,42,107,155,42,]),'id':([12,28,32,34,37,48,50,53,63,64,67,70,72,76,84,86,91,92,94,95,102,111,113,114,115,120,128,151,152,],[33,33,54,33,73,54,54,90,54,54,54,33,103,54,54,54,54,54,54,54,54,54,54,54,33,54,33,33,33,]),'fn_definition':([0,9,],[4,4,]),'fn_call_args':([50,],[87,]),'return_stmt':([12,28,34,70,115,128,151,152,],[35,35,35,35,35,35,35,35,]),'fn_declaration':([0,9,],[6,6,]),'stmt':([12,28,34,70,115,],[36,36,70,70,141,]),'mixed_id':([32,48,50,63,64,67,76,84,86,91,92,94,95,102,111,113,114,120,],[60,60,60,60,98,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'condition':([48,76,84,86,113,114,],[85,104,112,117,138,139,]),'left_side':([37,],[71,]),'basic_block':([0,9,],[9,9,]),'unmatched_stmt':([12,28,34,70,115,128,151,152,],[26,26,26,26,26,146,157,160,]),'multiple_arg':([108,156,],[134,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> basic_block program','program',2,'p_program','Parser.py',115),
  ('program -> basic_block','program',1,'p_program','Parser.py',116),
  ('basic_block -> declaration','basic_block',1,'p_basic_block','Parser.py',121),
  ('basic_block -> fn_declaration','basic_block',1,'p_basic_block','Parser.py',122),
  ('basic_block -> fn_definition','basic_block',1,'p_basic_block','Parser.py',123),
  ('fn_declaration -> type fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',128),
  ('fn_declaration -> type fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',129),
  ('fn_declaration -> VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',130),
  ('fn_declaration -> VOID fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',131),
  ('fn_definition -> fn_defn1 fn_defn2','fn_definition',2,'p_fn_definition','Parser.py',160),
  ('fn_defn1 -> type fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',177),
  ('fn_defn1 -> VOID fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',178),
  ('fn_defn2 -> LCURVE fn_body RCURVE','fn_defn2',3,'p_fn_defn2','Parser.py',244),
  ('fn_name -> star MAIN','fn_name',2,'p_fn_name','Parser.py',263),
  ('fn_name -> variable','fn_name',1,'p_fn_name','Parser.py',264),
  ('star -> STAR star','star',2,'p_star','Parser.py',274),
  ('star -> <empty>','star',0,'p_star','Parser.py',275),
  ('fn_body -> fn_line fn_body','fn_body',2,'p_fn_body','Parser.py',284),
  ('fn_body -> <empty>','fn_body',0,'p_fn_body','Parser.py',285),
  ('fn_line -> declaration','fn_line',1,'p_fn_line','Parser.py',290),
  ('fn_line -> stmt','fn_line',1,'p_fn_line','Parser.py',291),
  ('fn_line -> fn_call SEMICOLON','fn_line',2,'p_fn_line','Parser.py',292),
  ('return_stmt -> RETURN E1 SEMICOLON','return_stmt',3,'p_return_stmt','Parser.py',301),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','Parser.py',302),
  ('fn_call -> IDENTIFIER LPAREN fn_call_args RPAREN','fn_call',4,'p_fn_call','Parser.py',357),
  ('fn_call_args -> E1 fn_call_args_list','fn_call_args',2,'p_fn_call_args','Parser.py',386),
  ('fn_call_args -> <empty>','fn_call_args',0,'p_fn_call_args','Parser.py',387),
  ('fn_call_args_list -> COMMA E1 fn_call_args_list','fn_call_args_list',3,'p_fn_call_args_list','Parser.py',402),
  ('fn_call_args_list -> <empty>','fn_call_args_list',0,'p_fn_call_args_list','Parser.py',403),
  ('type -> INT_VAR','type',1,'p_type','Parser.py',416),
  ('type -> FLOAT_VAR','type',1,'p_type','Parser.py',417),
  ('dec_arg_list -> type star dec_multiple_arg','dec_arg_list',3,'p_dec_arg_list','Parser.py',424),
  ('dec_multiple_arg -> COMMA type star dec_multiple_arg','dec_multiple_arg',4,'p_dec_multiple_arg','Parser.py',431),
  ('dec_multiple_arg -> <empty>','dec_multiple_arg',0,'p_dec_multiple_arg','Parser.py',432),
  ('arg_list -> type variable multiple_arg','arg_list',3,'p_arg_list','Parser.py',442),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list','Parser.py',443),
  ('multiple_arg -> COMMA type variable multiple_arg','multiple_arg',4,'p_multiple_arg','Parser.py',455),
  ('multiple_arg -> <empty>','multiple_arg',0,'p_multiple_arg','Parser.py',456),
  ('declaration -> type list SEMICOLON','declaration',3,'p_declaration','Parser.py',467),
  ('list -> list COMMA variable','list',3,'p_list','Parser.py',486),
  ('list -> variable','list',1,'p_list','Parser.py',487),
  ('variable -> IDENTIFIER','variable',1,'p_variable','Parser.py',505),
  ('variable -> STAR variable','variable',2,'p_variable','Parser.py',506),
  ('stmt -> matched_stmt','stmt',1,'p_stmt','Parser.py',517),
  ('stmt -> unmatched_stmt','stmt',1,'p_stmt','Parser.py',518),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',525),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',526),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',527),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',528),
  ('matched_stmt -> LCURVE stmt_list RCURVE','matched_stmt',3,'p_matched_stmt','Parser.py',529),
  ('matched_stmt -> expr','matched_stmt',1,'p_matched_stmt','Parser.py',530),
  ('matched_stmt -> return_stmt','matched_stmt',1,'p_matched_stmt','Parser.py',531),
  ('matched_stmt -> WHILE LPAREN condition RPAREN matched_stmt','matched_stmt',5,'p_matched_stmt','Parser.py',532),
  ('matched_stmt -> WHILE LPAREN condition RPAREN SEMICOLON','matched_stmt',5,'p_matched_stmt','Parser.py',533),
  ('unmatched_stmt -> IF LPAREN condition RPAREN stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',565),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',566),
  ('unmatched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',567),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',568),
  ('unmatched_stmt -> WHILE LPAREN condition RPAREN unmatched_stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',569),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','Parser.py',596),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','Parser.py',597),
  ('condition -> condition AND condition','condition',3,'p_condition','Parser.py',624),
  ('condition -> condition OR condition','condition',3,'p_condition','Parser.py',625),
  ('condition -> E1 OPERATOR E1','condition',3,'p_condition','Parser.py',626),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','Parser.py',627),
  ('condition -> NOT condition','condition',2,'p_condition','Parser.py',628),
  ('expr -> id EQUALS E1 SEMICOLON','expr',4,'p_expr','Parser.py',661),
  ('expr -> STAR left_side EQUALS E1 SEMICOLON','expr',5,'p_expr','Parser.py',662),
  ('left_side -> id','left_side',1,'p_left_side','Parser.py',692),
  ('left_side -> star_ampersand id','left_side',2,'p_left_side','Parser.py',693),
  ('E1 -> E1 PLUS E2','E1',3,'p_E1','Parser.py',703),
  ('E1 -> E1 MINUS E2','E1',3,'p_E1','Parser.py',704),
  ('E1 -> E2','E1',1,'p_E1','Parser.py',705),
  ('E2 -> E2 STAR E3','E2',3,'p_E2','Parser.py',726),
  ('E2 -> E2 DIVIDE E3','E2',3,'p_E2','Parser.py',727),
  ('E2 -> E3','E2',1,'p_E2','Parser.py',728),
  ('E3 -> LPAREN E1 RPAREN','E3',3,'p_E3','Parser.py',752),
  ('E3 -> mixed_id','E3',1,'p_E3','Parser.py',753),
  ('mixed_id -> star_ampersand id','mixed_id',2,'p_mixed_id','Parser.py',809),
  ('mixed_id -> id','mixed_id',1,'p_mixed_id','Parser.py',810),
  ('mixed_id -> MINUS mixed_id','mixed_id',2,'p_mixed_id','Parser.py',811),
  ('mixed_id -> INT','mixed_id',1,'p_mixed_id','Parser.py',812),
  ('mixed_id -> FLOAT','mixed_id',1,'p_mixed_id','Parser.py',813),
  ('mixed_id -> fn_call','mixed_id',1,'p_mixed_id','Parser.py',814),
  ('mixed_id -> star_ampersand fn_call','mixed_id',2,'p_mixed_id','Parser.py',815),
  ('star_ampersand -> STAR star_ampersand','star_ampersand',2,'p_star_ampersand','Parser.py',846),
  ('star_ampersand -> STAR','star_ampersand',1,'p_star_ampersand','Parser.py',847),
  ('star_ampersand -> AMPERSAND','star_ampersand',1,'p_star_ampersand','Parser.py',848),
  ('id -> IDENTIFIER','id',1,'p_id','Parser.py',889),
]
