
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightUMINUSIDENTIFIER INT FLOAT EQUALS LPAREN RPAREN LCURVE RCURVE MAIN SEMICOLON COMMA STAR AMPERSAND PLUS MINUS DIVIDE IF ELSE AND OR NOT WHILE OPERATOR RETURN INT_VAR FLOAT_VAR VOID\n\tprogram : basic_block program\n\t\t\t| basic_block\n\t\n\tbasic_block : declaration\n\t\t\t\t| fn_declaration\n\t\t\t\t| fn_definition\n\t\n\tfn_declaration : type fn_name LPAREN dec_arg_list RPAREN SEMICOLON\n\t\t\t\t| type fn_name LPAREN arg_list RPAREN SEMICOLON\n\t\t\t\t| VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON\n\t\t\t\t| VOID fn_name LPAREN arg_list RPAREN SEMICOLON\n\t\n\tfn_definition : fn_defn1 fn_defn2\n\t\n\tfn_defn1 : type fn_name LPAREN arg_list RPAREN\n\t\t| VOID fn_name LPAREN arg_list RPAREN\n\t\n\tfn_defn2 : LCURVE fn_body RCURVE\n\t\n\tfn_name : star MAIN\n\t\t\t| variable\n\t\n\tstar : STAR star\n\t\t|\n\t\n\tfn_body : fn_line fn_body\n\t\t\t| \n\t\n\tfn_line : declaration\n\t\t\t| stmt\n\t\t\t| fn_call SEMICOLON\n\t\n\treturn_stmt : RETURN E1 SEMICOLON\n\t\t\t\t| RETURN SEMICOLON\n\t\n\tfn_call : IDENTIFIER LPAREN fn_call_args RPAREN \n\t\n\tfn_call_args : E1 fn_call_args_list\n\t\t\t\t|\n\t\n\tfn_call_args_list : COMMA E1 fn_call_args_list\n\t\t\t\t\t| \n\t\n\ttype : INT_VAR\n\t\t| FLOAT_VAR\n\t\n\tdec_arg_list : type star dec_multiple_arg \n\t\n\tdec_multiple_arg : COMMA type star dec_multiple_arg\n\t\t\t\t| \n\t\n\targ_list : type variable multiple_arg\n\t\t\t| \n\t\n\tmultiple_arg : COMMA type variable multiple_arg\n\t\t\t\t| \n\t\n\tdeclaration : type list SEMICOLON\n\t\n\tlist : list COMMA variable\n\t\t| variable\n\t\n\tvariable : IDENTIFIER\n\t\t\t| STAR variable\n\t\n\tstmt : matched_stmt\n\t\t| unmatched_stmt\n\t\n\tmatched_stmt : IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt\n\t\t\t\t| IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt\n\t\t\t\t| LCURVE stmt_list RCURVE\n\t\t\t\t| expr\n\t\t\t\t| return_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN matched_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN SEMICOLON\n\t\n\tunmatched_stmt : IF LPAREN condition RPAREN stmt\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN unmatched_stmt\n\t\n\tstmt_list : stmt stmt_list\n\t\t\t| stmt\n\t\n\tcondition : condition AND condition\n\t\t\t| condition OR condition\n\t\t\t| E1 OPERATOR E1 \n\t\t\t| LPAREN condition RPAREN\n\t\t\t| NOT condition\n\t\n\texpr : id EQUALS E1 SEMICOLON\n\t\t| STAR left_side EQUALS E1 SEMICOLON\n\t\n\tleft_side : id\n\t\t\t| star_ampersand id\n\t\n\tE1 : E1 PLUS E2\n\t\t| E1 MINUS E2\n\t\t| E2\n\t\n\tE2 : E2 STAR E3\n\t\t| E2 DIVIDE E3\n\t\t| E3\n\t\n\tE3 : LPAREN E1 RPAREN\n\t\t| mixed_id\n\t\n\tmixed_id : star_ampersand id\n\t\t\t| id\n\t\t\t| MINUS mixed_id %prec UMINUS\n\t\t\t| INT\n\t\t\t| FLOAT\n\t\t\t| fn_call\n\t\t\t| star_ampersand fn_call\n\t\n\tstar_ampersand : STAR star_ampersand\n\t\t\t\t\t| STAR\n\t\t\t\t\t| AMPERSAND\n\t\n\tid : IDENTIFIER\n\t'
    
_lr_action_items = {'OPERATOR':([60,62,64,65,67,69,70,72,92,93,96,97,121,126,127,128,129,130,133,],[-82,-80,-73,-84,-89,-83,-76,-78,125,-81,-79,-85,125,-74,-75,-72,-71,-77,-25,]),'INT':([38,58,63,73,80,81,82,89,90,94,95,99,100,103,122,123,125,134,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'AND':([60,62,64,65,67,69,70,72,91,93,96,97,107,119,120,126,127,128,129,130,133,139,140,141,145,],[-82,-80,-73,-84,-89,-83,-76,-78,123,-81,-79,-85,123,-66,123,-74,-75,-72,-71,-77,-25,-65,123,-62,-64,]),'OR':([60,62,64,65,67,69,70,72,91,93,96,97,107,119,120,126,127,128,129,130,133,139,140,141,145,],[-82,-80,-73,-84,-89,-83,-76,-78,122,-81,-79,-85,122,-66,122,-74,-75,-72,-71,-77,-25,-65,-63,-62,-64,]),'NOT':([58,80,89,90,122,123,],[89,89,89,89,89,89,]),'ELSE':([34,39,61,98,106,136,143,144,146,148,149,160,161,163,164,],[-52,-51,-24,-23,-50,-67,154,155,-68,-54,-53,-48,-49,-47,-46,]),'PLUS':([60,62,64,65,67,68,69,70,72,92,93,96,97,102,109,110,121,126,127,128,129,130,131,133,145,150,],[-82,-80,-73,-84,-89,100,-83,-76,-78,100,-81,-79,-85,100,100,100,100,-74,-75,-72,-71,-77,100,-25,100,100,]),'FLOAT':([38,58,63,73,80,81,82,89,90,94,95,99,100,103,122,123,125,134,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'LCURVE':([10,21,23,32,33,34,35,39,41,42,45,57,61,78,85,87,98,106,124,132,136,142,143,144,146,147,148,149,154,155,159,160,161,162,163,164,],[21,41,-39,41,-21,-52,-45,-51,41,-44,-20,-22,-24,41,-11,-12,-23,-50,41,41,-67,-55,-56,-44,-68,-59,-54,-53,41,41,-58,-48,-49,-57,-47,-46,]),'DIVIDE':([60,62,64,65,67,69,70,72,93,96,97,126,127,128,129,130,133,],[-82,-80,95,-84,-89,-83,-76,-78,-81,-79,-85,-74,-75,95,95,-77,-25,]),'STAR':([1,2,3,7,15,19,21,23,24,31,32,33,34,35,38,39,40,41,42,45,48,49,57,58,60,61,62,63,64,65,67,69,70,71,72,73,78,80,81,82,89,90,93,94,95,96,97,98,99,100,103,106,122,123,124,125,126,127,128,129,130,132,133,134,136,137,138,142,143,144,146,147,148,149,151,154,155,159,160,161,162,163,164,],[15,19,-30,-31,15,19,40,-39,48,48,40,-21,-52,-45,71,-51,71,40,-44,-20,48,19,-22,71,-82,-24,-80,71,94,-84,-89,-83,-76,71,-78,71,40,71,71,71,71,71,-81,71,71,-79,-85,-23,71,71,71,-50,71,71,40,71,-74,-75,94,94,-77,40,-25,71,-67,151,48,-55,-56,-44,-68,-59,-54,-53,151,40,40,-58,-48,-49,-57,-47,-46,]),'IF':([21,23,32,33,34,35,39,41,42,45,57,61,78,98,106,124,132,136,142,143,144,146,147,148,149,154,155,159,160,161,162,163,164,],[37,-39,37,-21,-52,-45,-51,37,-44,-20,-22,-24,37,-23,-50,37,37,-67,-55,-56,-44,-68,-59,-54,-53,37,37,-58,-48,-49,-57,-47,-46,]),'LPAREN':([11,14,16,17,18,25,28,37,38,43,44,58,67,73,80,81,82,89,90,94,95,99,100,103,122,123,125,134,],[-42,26,-15,-15,29,-14,-43,58,73,80,81,90,81,73,90,73,73,90,90,73,73,73,73,73,90,90,73,73,]),'COMMA':([3,7,11,12,16,19,27,28,47,49,55,60,62,64,65,67,69,70,72,83,84,93,96,97,109,126,127,128,129,130,133,137,150,151,152,153,],[-30,-31,-42,24,-41,-17,-16,-43,-40,-17,-41,-82,-80,-73,-84,-89,-83,-76,-78,112,114,-81,-79,-85,134,-74,-75,-72,-71,-77,-25,-17,134,-17,112,114,]),'AMPERSAND':([38,40,58,63,71,73,80,81,82,89,90,94,95,99,100,103,122,123,125,134,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'RETURN':([21,23,32,33,34,35,39,41,42,45,57,61,78,98,106,124,132,136,142,143,144,146,147,148,149,154,155,159,160,161,162,163,164,],[38,-39,38,-21,-52,-45,-51,38,-44,-20,-22,-24,38,-23,-50,38,38,-67,-55,-56,-44,-68,-59,-54,-53,38,38,-58,-48,-49,-57,-47,-46,]),'VOID':([0,5,6,8,9,22,23,54,115,116,117,118,],[2,-3,-5,2,-4,-10,-39,-13,-7,-6,-9,-8,]),'SEMICOLON':([11,12,16,28,36,38,47,55,60,62,64,65,67,68,69,70,72,85,86,87,88,93,96,97,110,124,126,127,128,129,130,131,132,133,154,155,],[-42,23,-41,-43,57,61,-40,-41,-82,-80,-73,-84,-89,98,-83,-76,-78,115,116,117,118,-81,-79,-85,136,143,-74,-75,-72,-71,-77,146,148,-25,160,163,]),'INT_VAR':([0,5,6,8,9,21,22,23,26,29,32,33,34,35,39,42,45,54,57,61,98,106,112,114,115,116,117,118,136,142,143,144,146,147,148,149,159,160,161,162,163,164,],[3,-3,-5,3,-4,3,-10,-39,3,3,3,-21,-52,-45,-51,-44,-20,-13,-22,-24,-23,-50,3,3,-7,-6,-9,-8,-67,-55,-56,-44,-68,-59,-54,-53,-58,-48,-49,-57,-47,-46,]),'FLOAT_VAR':([0,5,6,8,9,21,22,23,26,29,32,33,34,35,39,42,45,54,57,61,98,106,112,114,115,116,117,118,136,142,143,144,146,147,148,149,159,160,161,162,163,164,],[7,-3,-5,7,-4,7,-10,-39,7,7,7,-21,-52,-45,-51,-44,-20,-13,-22,-24,-23,-50,7,7,-7,-6,-9,-8,-67,-55,-56,-44,-68,-59,-54,-53,-58,-48,-49,-57,-47,-46,]),'MINUS':([38,58,60,62,63,64,65,67,68,69,70,72,73,80,81,82,89,90,92,93,94,95,96,97,99,100,102,103,109,110,121,122,123,125,126,127,128,129,130,131,133,134,145,150,],[63,63,-82,-80,63,-73,-84,-89,99,-83,-76,-78,63,63,63,63,63,63,99,-81,63,63,-79,-85,63,63,99,63,99,99,99,63,63,63,-74,-75,-72,-71,-77,99,-25,63,99,99,]),'RPAREN':([3,7,11,19,26,27,28,29,49,50,51,52,53,60,62,64,65,67,69,70,72,81,83,84,91,93,96,97,102,107,108,109,111,113,119,120,121,126,127,128,129,130,133,135,137,139,140,141,145,150,151,152,153,156,157,158,],[-30,-31,-42,-17,-36,-16,-43,-36,-17,85,86,87,88,-82,-80,-73,-84,-89,-83,-76,-78,-27,-34,-38,124,-81,-79,-85,130,132,133,-29,-32,-35,-66,139,130,-74,-75,-72,-71,-77,-25,-26,-17,-65,-63,-62,-64,-29,-17,-34,-38,-28,-33,-37,]),'WHILE':([21,23,32,33,34,35,39,41,42,45,57,61,78,98,106,124,132,136,142,143,144,146,147,148,149,154,155,159,160,161,162,163,164,],[43,-39,43,-21,-52,-45,-51,43,-44,-20,-22,-24,43,-23,-50,43,43,-67,-55,-56,-44,-68,-59,-54,-53,43,43,-58,-48,-49,-57,-47,-46,]),'RCURVE':([21,23,30,32,33,34,35,39,42,45,56,57,61,78,79,98,105,106,136,142,143,144,146,147,148,149,159,160,161,162,163,164,],[-19,-39,54,-19,-21,-52,-45,-51,-44,-20,-18,-22,-24,-61,106,-23,-60,-50,-67,-55,-56,-44,-68,-59,-54,-53,-58,-48,-49,-57,-47,-46,]),'IDENTIFIER':([1,2,3,7,15,19,21,23,24,31,32,33,34,35,38,39,40,41,42,45,48,49,57,58,59,61,63,66,71,73,77,78,80,81,82,89,90,94,95,98,99,100,101,103,106,122,123,124,125,132,134,136,138,142,143,144,146,147,148,149,154,155,159,160,161,162,163,164,],[11,11,-30,-31,11,11,44,-39,11,11,44,-21,-52,-45,67,-51,75,75,-44,-20,11,11,-22,67,-88,-24,67,67,-87,67,75,75,67,67,67,67,67,67,67,-23,67,67,-86,67,-50,67,67,75,67,75,67,-67,11,-55,-56,-44,-68,-59,-54,-53,75,75,-58,-48,-49,-57,-47,-46,]),'$end':([4,5,6,8,9,20,22,23,54,115,116,117,118,],[0,-3,-5,-2,-4,-1,-10,-39,-13,-7,-6,-9,-8,]),'MAIN':([1,2,3,7,13,15,19,27,],[-17,-17,-30,-31,25,-17,-17,-16,]),'EQUALS':([44,46,74,75,76,104,],[-89,82,103,-89,-69,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fn_body':([21,32,],[30,56,]),'type':([0,8,21,26,29,32,112,114,],[1,1,31,49,49,31,137,138,]),'fn_line':([21,32,],[32,32,]),'E3':([38,58,73,80,81,82,89,90,94,95,99,100,103,122,123,125,134,],[70,70,70,70,70,70,70,70,126,127,70,70,70,70,70,70,70,]),'fn_defn2':([10,],[22,]),'program':([0,8,],[4,20,]),'stmt':([21,32,41,78,124,],[33,33,78,78,142,]),'declaration':([0,8,21,32,],[5,5,45,45,]),'E2':([38,58,73,80,81,82,89,90,99,100,103,122,123,125,134,],[64,64,64,64,64,64,64,64,128,129,64,64,64,64,64,]),'fn_call_args':([81,],[108,]),'left_side':([40,],[74,]),'dec_arg_list':([26,29,],[51,53,]),'fn_name':([1,2,],[14,18,]),'unmatched_stmt':([21,32,41,78,124,132,154,155,],[35,35,35,35,35,147,159,162,]),'fn_call':([21,32,38,58,63,66,73,80,81,82,89,90,94,95,99,100,103,122,123,125,134,],[36,36,65,65,65,97,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'multiple_arg':([84,153,],[113,158,]),'stmt_list':([41,78,],[79,105,]),'expr':([21,32,41,78,124,132,154,155,],[39,39,39,39,39,39,39,39,]),'return_stmt':([21,32,41,78,124,132,154,155,],[34,34,34,34,34,34,34,34,]),'arg_list':([26,29,],[50,52,]),'id':([21,32,38,40,41,58,63,66,73,77,78,80,81,82,89,90,94,95,99,100,103,122,123,124,125,132,134,154,155,],[46,46,62,76,46,62,62,96,62,104,46,62,62,62,62,62,62,62,62,62,62,62,62,46,62,46,62,46,46,]),'variable':([1,2,15,19,24,31,48,49,138,],[16,17,28,28,47,55,28,84,153,]),'condition':([58,80,89,90,122,123,],[91,107,119,120,140,141,]),'matched_stmt':([21,32,41,78,124,132,154,155,],[42,42,42,42,144,149,161,164,]),'list':([1,31,],[12,12,]),'fn_definition':([0,8,],[6,6,]),'star':([1,2,15,19,49,137,151,],[13,13,27,27,83,152,27,]),'star_ampersand':([38,40,58,63,71,73,80,81,82,89,90,94,95,99,100,103,122,123,125,134,],[66,77,66,66,101,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'basic_block':([0,8,],[8,8,]),'fn_call_args_list':([109,150,],[135,156,]),'fn_declaration':([0,8,],[9,9,]),'fn_defn1':([0,8,],[10,10,]),'mixed_id':([38,58,63,73,80,81,82,89,90,94,95,99,100,103,122,123,125,134,],[72,72,93,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'E1':([38,58,73,80,81,82,89,90,103,122,123,125,134,],[68,92,102,92,109,110,92,121,131,92,92,145,150,]),'dec_multiple_arg':([83,152,],[111,157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> basic_block program','program',2,'p_program','Parser.py',111),
  ('program -> basic_block','program',1,'p_program','Parser.py',112),
  ('basic_block -> declaration','basic_block',1,'p_basic_block','Parser.py',117),
  ('basic_block -> fn_declaration','basic_block',1,'p_basic_block','Parser.py',118),
  ('basic_block -> fn_definition','basic_block',1,'p_basic_block','Parser.py',119),
  ('fn_declaration -> type fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',124),
  ('fn_declaration -> type fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',125),
  ('fn_declaration -> VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',126),
  ('fn_declaration -> VOID fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',127),
  ('fn_definition -> fn_defn1 fn_defn2','fn_definition',2,'p_fn_definition','Parser.py',156),
  ('fn_defn1 -> type fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',173),
  ('fn_defn1 -> VOID fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',174),
  ('fn_defn2 -> LCURVE fn_body RCURVE','fn_defn2',3,'p_fn_defn2','Parser.py',240),
  ('fn_name -> star MAIN','fn_name',2,'p_fn_name','Parser.py',259),
  ('fn_name -> variable','fn_name',1,'p_fn_name','Parser.py',260),
  ('star -> STAR star','star',2,'p_star','Parser.py',270),
  ('star -> <empty>','star',0,'p_star','Parser.py',271),
  ('fn_body -> fn_line fn_body','fn_body',2,'p_fn_body','Parser.py',280),
  ('fn_body -> <empty>','fn_body',0,'p_fn_body','Parser.py',281),
  ('fn_line -> declaration','fn_line',1,'p_fn_line','Parser.py',286),
  ('fn_line -> stmt','fn_line',1,'p_fn_line','Parser.py',287),
  ('fn_line -> fn_call SEMICOLON','fn_line',2,'p_fn_line','Parser.py',288),
  ('return_stmt -> RETURN E1 SEMICOLON','return_stmt',3,'p_return_stmt','Parser.py',297),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','Parser.py',298),
  ('fn_call -> IDENTIFIER LPAREN fn_call_args RPAREN','fn_call',4,'p_fn_call','Parser.py',350),
  ('fn_call_args -> E1 fn_call_args_list','fn_call_args',2,'p_fn_call_args','Parser.py',381),
  ('fn_call_args -> <empty>','fn_call_args',0,'p_fn_call_args','Parser.py',382),
  ('fn_call_args_list -> COMMA E1 fn_call_args_list','fn_call_args_list',3,'p_fn_call_args_list','Parser.py',397),
  ('fn_call_args_list -> <empty>','fn_call_args_list',0,'p_fn_call_args_list','Parser.py',398),
  ('type -> INT_VAR','type',1,'p_type','Parser.py',411),
  ('type -> FLOAT_VAR','type',1,'p_type','Parser.py',412),
  ('dec_arg_list -> type star dec_multiple_arg','dec_arg_list',3,'p_dec_arg_list','Parser.py',419),
  ('dec_multiple_arg -> COMMA type star dec_multiple_arg','dec_multiple_arg',4,'p_dec_multiple_arg','Parser.py',426),
  ('dec_multiple_arg -> <empty>','dec_multiple_arg',0,'p_dec_multiple_arg','Parser.py',427),
  ('arg_list -> type variable multiple_arg','arg_list',3,'p_arg_list','Parser.py',437),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list','Parser.py',438),
  ('multiple_arg -> COMMA type variable multiple_arg','multiple_arg',4,'p_multiple_arg','Parser.py',450),
  ('multiple_arg -> <empty>','multiple_arg',0,'p_multiple_arg','Parser.py',451),
  ('declaration -> type list SEMICOLON','declaration',3,'p_declaration','Parser.py',462),
  ('list -> list COMMA variable','list',3,'p_list','Parser.py',481),
  ('list -> variable','list',1,'p_list','Parser.py',482),
  ('variable -> IDENTIFIER','variable',1,'p_variable','Parser.py',500),
  ('variable -> STAR variable','variable',2,'p_variable','Parser.py',501),
  ('stmt -> matched_stmt','stmt',1,'p_stmt','Parser.py',512),
  ('stmt -> unmatched_stmt','stmt',1,'p_stmt','Parser.py',513),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',520),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',521),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',522),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',523),
  ('matched_stmt -> LCURVE stmt_list RCURVE','matched_stmt',3,'p_matched_stmt','Parser.py',524),
  ('matched_stmt -> expr','matched_stmt',1,'p_matched_stmt','Parser.py',525),
  ('matched_stmt -> return_stmt','matched_stmt',1,'p_matched_stmt','Parser.py',526),
  ('matched_stmt -> WHILE LPAREN condition RPAREN matched_stmt','matched_stmt',5,'p_matched_stmt','Parser.py',527),
  ('matched_stmt -> WHILE LPAREN condition RPAREN SEMICOLON','matched_stmt',5,'p_matched_stmt','Parser.py',528),
  ('unmatched_stmt -> IF LPAREN condition RPAREN stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',560),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',561),
  ('unmatched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',562),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',563),
  ('unmatched_stmt -> WHILE LPAREN condition RPAREN unmatched_stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',564),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','Parser.py',591),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','Parser.py',592),
  ('condition -> condition AND condition','condition',3,'p_condition','Parser.py',619),
  ('condition -> condition OR condition','condition',3,'p_condition','Parser.py',620),
  ('condition -> E1 OPERATOR E1','condition',3,'p_condition','Parser.py',621),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','Parser.py',622),
  ('condition -> NOT condition','condition',2,'p_condition','Parser.py',623),
  ('expr -> id EQUALS E1 SEMICOLON','expr',4,'p_expr','Parser.py',656),
  ('expr -> STAR left_side EQUALS E1 SEMICOLON','expr',5,'p_expr','Parser.py',657),
  ('left_side -> id','left_side',1,'p_left_side','Parser.py',687),
  ('left_side -> star_ampersand id','left_side',2,'p_left_side','Parser.py',688),
  ('E1 -> E1 PLUS E2','E1',3,'p_E1','Parser.py',698),
  ('E1 -> E1 MINUS E2','E1',3,'p_E1','Parser.py',699),
  ('E1 -> E2','E1',1,'p_E1','Parser.py',700),
  ('E2 -> E2 STAR E3','E2',3,'p_E2','Parser.py',721),
  ('E2 -> E2 DIVIDE E3','E2',3,'p_E2','Parser.py',722),
  ('E2 -> E3','E2',1,'p_E2','Parser.py',723),
  ('E3 -> LPAREN E1 RPAREN','E3',3,'p_E3','Parser.py',747),
  ('E3 -> mixed_id','E3',1,'p_E3','Parser.py',748),
  ('mixed_id -> star_ampersand id','mixed_id',2,'p_mixed_id','Parser.py',804),
  ('mixed_id -> id','mixed_id',1,'p_mixed_id','Parser.py',805),
  ('mixed_id -> MINUS mixed_id','mixed_id',2,'p_mixed_id','Parser.py',806),
  ('mixed_id -> INT','mixed_id',1,'p_mixed_id','Parser.py',807),
  ('mixed_id -> FLOAT','mixed_id',1,'p_mixed_id','Parser.py',808),
  ('mixed_id -> fn_call','mixed_id',1,'p_mixed_id','Parser.py',809),
  ('mixed_id -> star_ampersand fn_call','mixed_id',2,'p_mixed_id','Parser.py',810),
  ('star_ampersand -> STAR star_ampersand','star_ampersand',2,'p_star_ampersand','Parser.py',841),
  ('star_ampersand -> STAR','star_ampersand',1,'p_star_ampersand','Parser.py',842),
  ('star_ampersand -> AMPERSAND','star_ampersand',1,'p_star_ampersand','Parser.py',843),
  ('id -> IDENTIFIER','id',1,'p_id','Parser.py',884),
]
