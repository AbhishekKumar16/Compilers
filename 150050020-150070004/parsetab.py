
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '81B1896417680B4D9CC6E5BE2137ECE3'
    
_lr_action_items = {'PLUS':([54,55,56,57,58,59,63,64,68,94,96,97,98,104,108,109,119,120,121,122,123,124,130,132,145,147,],[-83,-73,-84,-76,-80,91,-89,-82,-78,91,-81,-85,-79,91,91,91,-74,-75,-71,-72,-77,91,91,-25,91,91,]),'OPERATOR':([54,55,56,57,58,63,64,68,96,97,98,104,119,120,121,122,123,130,132,],[-83,-73,-84,-76,-80,-89,-82,-78,-81,-85,-79,128,-74,-75,-71,-72,-77,128,-25,]),'ELSE':([43,44,60,93,100,135,139,142,143,148,150,159,161,162,163,],[-51,-52,-24,-23,-50,-67,-68,-53,-54,155,156,-46,-47,-49,-48,]),'RCURVE':([21,23,31,32,35,39,42,43,44,45,60,71,72,79,81,93,99,100,135,139,142,143,144,148,149,150,159,160,161,162,163,164,],[-19,-39,-44,69,-45,-19,-20,-51,-52,-21,-24,-61,100,-18,-22,-23,-60,-50,-67,-68,-53,-54,-59,-44,-55,-56,-46,-57,-47,-49,-48,-58,]),'LPAREN':([14,15,16,18,19,26,27,30,36,37,46,61,63,76,77,78,82,89,90,91,92,102,105,106,125,126,128,133,],[-42,-15,28,-15,29,-43,-14,61,76,77,82,61,77,105,61,61,105,61,61,61,61,61,105,105,105,105,61,61,]),'STAR':([2,4,7,10,12,17,21,23,24,30,31,33,34,35,39,40,42,43,44,45,48,49,54,55,56,57,58,60,61,62,63,64,65,68,71,76,77,78,81,82,89,90,91,92,93,96,97,98,100,102,105,106,119,120,121,122,123,125,126,127,128,132,133,135,136,137,138,139,142,143,144,148,149,150,152,155,156,159,160,161,162,163,164,],[12,17,-30,-31,12,17,34,-39,48,62,-44,34,62,-45,34,48,-20,-51,-52,-21,48,17,-83,89,-84,-76,-80,-24,62,62,-89,-82,62,-78,34,62,62,62,-22,62,62,62,62,62,-23,-81,-85,-79,-50,62,62,62,-74,-75,89,89,-77,62,62,34,62,-25,62,-67,34,152,48,-68,-53,-54,-59,-44,-55,-56,152,34,34,-46,-57,-47,-49,-48,-58,]),'LCURVE':([8,21,23,31,33,35,39,42,43,44,45,60,71,81,85,87,93,100,127,135,136,139,142,143,144,148,149,150,155,156,159,160,161,162,163,164,],[21,33,-39,-44,33,-45,33,-20,-51,-52,-21,-24,33,-22,-11,-12,-23,-50,33,-67,33,-68,-53,-54,-59,-44,-55,-56,33,33,-46,-57,-47,-49,-48,-58,]),'WHILE':([21,23,31,33,35,39,42,43,44,45,60,71,81,93,100,127,135,136,139,142,143,144,148,149,150,155,156,159,160,161,162,163,164,],[36,-39,-44,36,-45,36,-20,-51,-52,-21,-24,36,-22,-23,-50,36,-67,36,-68,-53,-54,-59,-44,-55,-56,36,36,-46,-57,-47,-49,-48,-58,]),'IDENTIFIER':([2,4,7,10,12,17,21,23,24,30,31,33,34,35,39,40,42,43,44,45,48,49,60,61,62,65,66,67,71,73,76,77,78,81,82,89,90,91,92,93,95,100,102,105,106,125,126,127,128,133,135,136,138,139,142,143,144,148,149,150,155,156,159,160,161,162,163,164,],[14,14,-30,-31,14,14,37,-39,14,63,-44,70,70,-45,37,14,-20,-51,-52,-21,14,14,-24,63,-87,63,63,-88,70,70,63,63,63,-22,63,63,63,63,63,-23,-86,-50,63,63,63,63,63,70,63,63,-67,70,14,-68,-53,-54,-59,-44,-55,-56,70,70,-46,-57,-47,-49,-48,-58,]),'RPAREN':([7,10,14,17,25,26,28,29,49,50,51,52,53,54,55,56,57,58,63,64,68,77,83,84,94,96,97,98,103,107,108,110,111,114,119,120,121,122,123,129,130,131,132,134,137,140,141,145,146,147,151,152,153,154,157,158,],[-30,-31,-42,-17,-16,-43,-36,-36,-17,85,86,87,88,-83,-73,-84,-76,-80,-89,-82,-78,-27,-34,-38,123,-81,-85,-79,127,132,-29,136,-32,-35,-74,-75,-71,-72,-77,146,123,-66,-25,-26,-17,-62,-63,-64,-65,-29,-34,-17,-38,-28,-33,-37,]),'COMMA':([7,10,11,14,15,17,25,26,47,49,54,55,56,57,58,63,64,68,80,83,84,96,97,98,108,119,120,121,122,123,132,137,147,151,152,153,],[-30,-31,24,-42,-41,-17,-16,-43,-40,-17,-83,-73,-84,-76,-80,-89,-82,-78,-41,112,113,-81,-85,-79,133,-74,-75,-71,-72,-77,-25,-17,133,112,-17,113,]),'RETURN':([21,23,31,33,35,39,42,43,44,45,60,71,81,93,100,127,135,136,139,142,143,144,148,149,150,155,156,159,160,161,162,163,164,],[30,-39,-44,30,-45,30,-20,-51,-52,-21,-24,30,-22,-23,-50,30,-67,30,-68,-53,-54,-59,-44,-55,-56,30,30,-46,-57,-47,-49,-48,-58,]),'AMPERSAND':([30,34,61,62,65,76,77,78,82,89,90,91,92,102,105,106,125,126,128,133,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'VOID':([0,3,5,6,9,20,23,69,115,116,117,118,],[4,-3,-5,-4,4,-10,-39,-13,-7,-6,-9,-8,]),'FLOAT':([30,61,65,76,77,78,82,89,90,91,92,102,105,106,125,126,128,133,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'MINUS':([30,54,55,56,57,58,59,61,63,64,65,68,76,77,78,82,89,90,91,92,94,96,97,98,102,104,105,106,108,109,119,120,121,122,123,124,125,126,128,130,132,133,145,147,],[65,-83,-73,-84,-76,-80,92,65,-89,-82,65,-78,65,65,65,65,65,65,65,65,92,-81,-85,-79,65,92,65,65,92,92,-74,-75,-71,-72,-77,92,65,65,65,92,-25,65,92,92,]),'OR':([54,55,56,57,58,63,64,68,96,97,98,103,110,119,120,121,122,123,129,131,132,140,141,145,146,],[-83,-73,-84,-76,-80,-89,-82,-78,-81,-85,-79,126,126,-74,-75,-71,-72,-77,126,-66,-25,-62,-63,-64,-65,]),'INT':([30,61,65,76,77,78,82,89,90,91,92,102,105,106,125,126,128,133,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'SEMICOLON':([11,14,15,26,30,41,47,54,55,56,57,58,59,63,64,68,80,85,86,87,88,96,97,98,109,119,120,121,122,123,124,127,132,136,155,156,],[23,-42,-41,-43,60,81,-40,-83,-73,-84,-76,-80,93,-89,-82,-78,-41,115,116,117,118,-81,-85,-79,135,-74,-75,-71,-72,-77,139,143,-25,150,161,163,]),'NOT':([76,82,105,106,125,126,],[106,106,106,106,106,106,]),'INT_VAR':([0,3,5,6,9,20,21,23,28,29,31,35,39,42,43,44,45,60,69,81,93,100,112,113,115,116,117,118,135,139,142,143,144,148,149,150,159,160,161,162,163,164,],[7,-3,-5,-4,7,-10,7,-39,7,7,-44,-45,7,-20,-51,-52,-21,-24,-13,-22,-23,-50,7,7,-7,-6,-9,-8,-67,-68,-53,-54,-59,-44,-55,-56,-46,-57,-47,-49,-48,-58,]),'IF':([21,23,31,33,35,39,42,43,44,45,60,71,81,93,100,127,135,136,139,142,143,144,148,149,150,155,156,159,160,161,162,163,164,],[46,-39,-44,46,-45,46,-20,-51,-52,-21,-24,46,-22,-23,-50,46,-67,46,-68,-53,-54,-59,-44,-55,-56,46,46,-46,-57,-47,-49,-48,-58,]),'EQUALS':([37,38,70,74,75,101,],[-89,78,-89,102,-69,-70,]),'$end':([1,3,5,6,9,20,22,23,69,115,116,117,118,],[0,-3,-5,-4,-2,-10,-1,-39,-13,-7,-6,-9,-8,]),'AND':([54,55,56,57,58,63,64,68,96,97,98,103,110,119,120,121,122,123,129,131,132,140,141,145,146,],[-83,-73,-84,-76,-80,-89,-82,-78,-81,-85,-79,125,125,-74,-75,-71,-72,-77,125,-66,-25,-62,125,-64,-65,]),'FLOAT_VAR':([0,3,5,6,9,20,21,23,28,29,31,35,39,42,43,44,45,60,69,81,93,100,112,113,115,116,117,118,135,139,142,143,144,148,149,150,159,160,161,162,163,164,],[10,-3,-5,-4,10,-10,10,-39,10,10,-44,-45,10,-20,-51,-52,-21,-24,-13,-22,-23,-50,10,10,-7,-6,-9,-8,-67,-68,-53,-54,-59,-44,-55,-56,-46,-57,-47,-49,-48,-58,]),'MAIN':([2,4,7,10,12,13,17,25,],[-17,-17,-30,-31,-17,27,-17,-16,]),'DIVIDE':([54,55,56,57,58,63,64,68,96,97,98,119,120,121,122,123,132,],[-83,90,-84,-76,-80,-89,-82,-78,-81,-85,-79,-74,-75,90,90,-77,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,9,],[1,22,]),'condition':([76,82,105,106,125,126,],[103,110,129,131,140,141,]),'mixed_id':([30,61,65,76,77,78,82,89,90,91,92,102,105,106,125,126,128,133,],[68,68,96,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'fn_defn2':([8,],[20,]),'arg_list':([28,29,],[50,52,]),'matched_stmt':([21,33,39,71,127,136,155,156,],[31,31,31,31,142,148,159,162,]),'E3':([30,61,76,77,78,82,89,90,91,92,102,105,106,125,126,128,133,],[57,57,57,57,57,57,119,120,57,57,57,57,57,57,57,57,57,]),'fn_body':([21,39,],[32,79,]),'multiple_arg':([84,153,],[114,158,]),'fn_declaration':([0,9,],[6,6,]),'dec_multiple_arg':([83,151,],[111,157,]),'basic_block':([0,9,],[9,9,]),'E2':([30,61,76,77,78,82,91,92,102,105,106,125,126,128,133,],[55,55,55,55,55,55,121,122,55,55,55,55,55,55,55,]),'star_ampersand':([30,34,61,62,65,76,77,78,82,89,90,91,92,102,105,106,125,126,128,133,],[66,73,66,95,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'fn_defn1':([0,9,],[8,8,]),'fn_call_args':([77,],[107,]),'id':([21,30,33,34,39,61,65,66,71,73,76,77,78,82,89,90,91,92,102,105,106,125,126,127,128,133,136,155,156,],[38,58,38,75,38,58,58,98,38,101,58,58,58,58,58,58,58,58,58,58,58,58,58,38,58,58,38,38,38,]),'stmt':([21,33,39,71,136,],[45,71,45,71,149,]),'type':([0,9,21,28,29,39,112,113,],[2,2,40,49,49,40,137,138,]),'fn_call':([21,30,39,61,65,66,76,77,78,82,89,90,91,92,102,105,106,125,126,128,133,],[41,56,41,56,56,97,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'declaration':([0,9,21,39,],[3,3,42,42,]),'return_stmt':([21,33,39,71,127,136,155,156,],[44,44,44,44,44,44,44,44,]),'fn_definition':([0,9,],[5,5,]),'fn_name':([2,4,],[16,19,]),'E1':([30,61,76,77,78,82,102,105,106,125,126,128,133,],[59,94,104,108,109,104,124,130,104,104,104,145,147,]),'fn_call_args_list':([108,147,],[134,154,]),'unmatched_stmt':([21,33,39,71,127,136,155,156,],[35,35,35,35,144,35,160,164,]),'list':([2,40,],[11,11,]),'expr':([21,33,39,71,127,136,155,156,],[43,43,43,43,43,43,43,43,]),'fn_line':([21,39,],[39,39,]),'dec_arg_list':([28,29,],[51,53,]),'left_side':([34,],[74,]),'variable':([2,4,12,17,24,40,48,49,138,],[15,18,26,26,47,80,26,84,153,]),'star':([2,4,12,17,49,137,152,],[13,13,25,25,83,151,25,]),'stmt_list':([33,71,],[72,99,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> basic_block program','program',2,'p_program','Parser.py',115),
  ('program -> basic_block','program',1,'p_program','Parser.py',116),
  ('basic_block -> declaration','basic_block',1,'p_basic_block','Parser.py',121),
  ('basic_block -> fn_declaration','basic_block',1,'p_basic_block','Parser.py',122),
  ('basic_block -> fn_definition','basic_block',1,'p_basic_block','Parser.py',123),
  ('fn_declaration -> type fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',128),
  ('fn_declaration -> type fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',129),
  ('fn_declaration -> VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',130),
  ('fn_declaration -> VOID fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',131),
  ('fn_definition -> fn_defn1 fn_defn2','fn_definition',2,'p_fn_definition','Parser.py',160),
  ('fn_defn1 -> type fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',177),
  ('fn_defn1 -> VOID fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',178),
  ('fn_defn2 -> LCURVE fn_body RCURVE','fn_defn2',3,'p_fn_defn2','Parser.py',244),
  ('fn_name -> star MAIN','fn_name',2,'p_fn_name','Parser.py',263),
  ('fn_name -> variable','fn_name',1,'p_fn_name','Parser.py',264),
  ('star -> STAR star','star',2,'p_star','Parser.py',274),
  ('star -> <empty>','star',0,'p_star','Parser.py',275),
  ('fn_body -> fn_line fn_body','fn_body',2,'p_fn_body','Parser.py',284),
  ('fn_body -> <empty>','fn_body',0,'p_fn_body','Parser.py',285),
  ('fn_line -> declaration','fn_line',1,'p_fn_line','Parser.py',290),
  ('fn_line -> stmt','fn_line',1,'p_fn_line','Parser.py',291),
  ('fn_line -> fn_call SEMICOLON','fn_line',2,'p_fn_line','Parser.py',292),
  ('return_stmt -> RETURN E1 SEMICOLON','return_stmt',3,'p_return_stmt','Parser.py',301),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','Parser.py',302),
  ('fn_call -> IDENTIFIER LPAREN fn_call_args RPAREN','fn_call',4,'p_fn_call','Parser.py',354),
  ('fn_call_args -> E1 fn_call_args_list','fn_call_args',2,'p_fn_call_args','Parser.py',385),
  ('fn_call_args -> <empty>','fn_call_args',0,'p_fn_call_args','Parser.py',386),
  ('fn_call_args_list -> COMMA E1 fn_call_args_list','fn_call_args_list',3,'p_fn_call_args_list','Parser.py',401),
  ('fn_call_args_list -> <empty>','fn_call_args_list',0,'p_fn_call_args_list','Parser.py',402),
  ('type -> INT_VAR','type',1,'p_type','Parser.py',415),
  ('type -> FLOAT_VAR','type',1,'p_type','Parser.py',416),
  ('dec_arg_list -> type star dec_multiple_arg','dec_arg_list',3,'p_dec_arg_list','Parser.py',423),
  ('dec_multiple_arg -> COMMA type star dec_multiple_arg','dec_multiple_arg',4,'p_dec_multiple_arg','Parser.py',430),
  ('dec_multiple_arg -> <empty>','dec_multiple_arg',0,'p_dec_multiple_arg','Parser.py',431),
  ('arg_list -> type variable multiple_arg','arg_list',3,'p_arg_list','Parser.py',441),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list','Parser.py',442),
  ('multiple_arg -> COMMA type variable multiple_arg','multiple_arg',4,'p_multiple_arg','Parser.py',454),
  ('multiple_arg -> <empty>','multiple_arg',0,'p_multiple_arg','Parser.py',455),
  ('declaration -> type list SEMICOLON','declaration',3,'p_declaration','Parser.py',466),
  ('list -> list COMMA variable','list',3,'p_list','Parser.py',485),
  ('list -> variable','list',1,'p_list','Parser.py',486),
  ('variable -> IDENTIFIER','variable',1,'p_variable','Parser.py',504),
  ('variable -> STAR variable','variable',2,'p_variable','Parser.py',505),
  ('stmt -> matched_stmt','stmt',1,'p_stmt','Parser.py',516),
  ('stmt -> unmatched_stmt','stmt',1,'p_stmt','Parser.py',517),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',524),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',525),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',526),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',527),
  ('matched_stmt -> LCURVE stmt_list RCURVE','matched_stmt',3,'p_matched_stmt','Parser.py',528),
  ('matched_stmt -> expr','matched_stmt',1,'p_matched_stmt','Parser.py',529),
  ('matched_stmt -> return_stmt','matched_stmt',1,'p_matched_stmt','Parser.py',530),
  ('matched_stmt -> WHILE LPAREN condition RPAREN matched_stmt','matched_stmt',5,'p_matched_stmt','Parser.py',531),
  ('matched_stmt -> WHILE LPAREN condition RPAREN SEMICOLON','matched_stmt',5,'p_matched_stmt','Parser.py',532),
  ('unmatched_stmt -> IF LPAREN condition RPAREN stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',564),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',565),
  ('unmatched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',566),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',567),
  ('unmatched_stmt -> WHILE LPAREN condition RPAREN unmatched_stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',568),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','Parser.py',595),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','Parser.py',596),
  ('condition -> condition AND condition','condition',3,'p_condition','Parser.py',623),
  ('condition -> condition OR condition','condition',3,'p_condition','Parser.py',624),
  ('condition -> E1 OPERATOR E1','condition',3,'p_condition','Parser.py',625),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','Parser.py',626),
  ('condition -> NOT condition','condition',2,'p_condition','Parser.py',627),
  ('expr -> id EQUALS E1 SEMICOLON','expr',4,'p_expr','Parser.py',660),
  ('expr -> STAR left_side EQUALS E1 SEMICOLON','expr',5,'p_expr','Parser.py',661),
  ('left_side -> id','left_side',1,'p_left_side','Parser.py',691),
  ('left_side -> star_ampersand id','left_side',2,'p_left_side','Parser.py',692),
  ('E1 -> E1 PLUS E2','E1',3,'p_E1','Parser.py',702),
  ('E1 -> E1 MINUS E2','E1',3,'p_E1','Parser.py',703),
  ('E1 -> E2','E1',1,'p_E1','Parser.py',704),
  ('E2 -> E2 STAR E3','E2',3,'p_E2','Parser.py',725),
  ('E2 -> E2 DIVIDE E3','E2',3,'p_E2','Parser.py',726),
  ('E2 -> E3','E2',1,'p_E2','Parser.py',727),
  ('E3 -> LPAREN E1 RPAREN','E3',3,'p_E3','Parser.py',751),
  ('E3 -> mixed_id','E3',1,'p_E3','Parser.py',752),
  ('mixed_id -> star_ampersand id','mixed_id',2,'p_mixed_id','Parser.py',808),
  ('mixed_id -> id','mixed_id',1,'p_mixed_id','Parser.py',809),
  ('mixed_id -> MINUS mixed_id','mixed_id',2,'p_mixed_id','Parser.py',810),
  ('mixed_id -> INT','mixed_id',1,'p_mixed_id','Parser.py',811),
  ('mixed_id -> FLOAT','mixed_id',1,'p_mixed_id','Parser.py',812),
  ('mixed_id -> fn_call','mixed_id',1,'p_mixed_id','Parser.py',813),
  ('mixed_id -> star_ampersand fn_call','mixed_id',2,'p_mixed_id','Parser.py',814),
  ('star_ampersand -> STAR star_ampersand','star_ampersand',2,'p_star_ampersand','Parser.py',845),
  ('star_ampersand -> STAR','star_ampersand',1,'p_star_ampersand','Parser.py',846),
  ('star_ampersand -> AMPERSAND','star_ampersand',1,'p_star_ampersand','Parser.py',847),
  ('id -> IDENTIFIER','id',1,'p_id','Parser.py',888),
]
