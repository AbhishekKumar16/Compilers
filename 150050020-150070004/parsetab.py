
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '81B1896417680B4D9CC6E5BE2137ECE3'
    
_lr_action_items = {'$end':([1,4,5,7,9,17,18,44,77,111,112,135,136,],[-5,0,-3,-4,-2,-10,-1,-39,-13,-8,-9,-6,-7,]),'PLUS':([59,60,61,63,64,66,67,68,69,87,91,92,93,96,103,106,118,119,120,121,122,123,124,129,140,142,],[-73,-80,-78,-83,-84,-89,-76,97,-82,97,-79,-85,-81,97,97,97,97,-75,-74,-77,-71,-72,-25,97,97,97,]),'DIVIDE':([59,60,61,63,64,66,67,69,91,92,93,119,120,121,122,123,124,],[94,-80,-78,-83,-84,-89,-76,-82,-79,-85,-81,-75,-74,-77,94,94,-25,]),'VOID':([0,1,5,7,9,17,44,77,111,112,135,136,],[3,-5,-3,-4,3,-10,-39,-13,-8,-9,-6,-7,]),'ELSE':([30,36,62,98,100,117,139,146,147,148,149,159,160,162,163,],[-52,-51,-24,-23,-50,-67,-68,155,156,-54,-53,-48,-49,-47,-46,]),'FLOAT':([31,50,58,65,76,78,79,90,94,95,97,99,104,105,126,130,131,132,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'AND':([59,60,61,63,64,66,67,69,91,92,93,107,108,119,120,121,122,123,124,127,128,141,142,143,144,],[-73,-80,-78,-83,-84,-89,-76,-82,-79,-85,-81,131,131,-75,-74,-77,-71,-72,-25,-66,131,-65,-64,-62,131,]),'LPAREN':([12,13,15,20,22,23,25,31,38,40,42,50,65,66,76,78,79,90,94,95,97,99,104,105,126,130,131,132,],[24,-42,-15,46,-15,-14,-43,65,76,78,79,65,65,76,65,105,105,65,65,65,65,65,105,105,65,65,105,105,]),'AMPERSAND':([29,31,50,54,58,65,76,78,79,90,94,95,97,99,104,105,126,130,131,132,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'STAR':([2,3,8,10,14,16,21,27,29,30,31,33,34,35,36,37,41,43,44,45,49,50,54,58,59,60,61,62,63,64,65,66,67,69,70,71,75,76,78,79,90,91,92,93,94,95,97,98,99,100,104,105,117,119,120,121,122,123,124,126,130,131,132,133,134,137,138,139,145,146,147,148,149,150,151,155,156,159,160,161,162,163,164,],[-31,14,-30,21,14,29,21,-20,54,-52,54,71,-21,29,-51,29,-44,-45,-39,71,14,54,54,54,95,-80,-78,-24,-83,-84,54,-89,-76,-82,-22,71,29,54,54,54,54,-79,-85,-81,54,54,54,-23,54,-50,54,54,-67,-75,-74,-77,95,95,-25,54,54,54,54,29,29,151,71,-68,-55,-56,-44,-54,-53,-59,151,29,29,-48,-49,-58,-47,-46,-57,]),'RCURVE':([16,27,30,34,35,36,39,41,43,44,62,70,73,74,75,98,100,101,117,139,145,146,147,148,149,150,159,160,161,162,163,164,],[-19,-20,-52,-21,-19,-51,77,-44,-45,-39,-24,-22,-18,100,-61,-23,-50,-60,-67,-68,-55,-56,-44,-54,-53,-59,-48,-49,-58,-47,-46,-57,]),'RETURN':([16,27,30,34,35,36,37,41,43,44,62,70,75,98,100,117,133,134,139,145,146,147,148,149,150,155,156,159,160,161,162,163,164,],[31,-20,-52,-21,31,-51,31,-44,-45,-39,-24,-22,31,-23,-50,-67,31,31,-68,-55,-56,-44,-54,-53,-59,31,31,-48,-49,-58,-47,-46,-57,]),'MAIN':([2,3,8,10,11,14,21,26,],[-31,-17,-30,-17,23,-17,-17,-16,]),'NOT':([78,79,104,105,131,132,],[104,104,104,104,104,104,]),'MINUS':([31,50,58,59,60,61,63,64,65,66,67,68,69,76,78,79,87,90,91,92,93,94,95,96,97,99,103,104,105,106,118,119,120,121,122,123,124,126,129,130,131,132,140,142,],[58,58,58,-73,-80,-78,-83,-84,58,-89,-76,99,-82,58,58,58,99,58,-79,-85,-81,58,58,99,58,58,99,58,58,99,99,-75,-74,-77,-71,-72,-25,58,99,58,58,58,99,99,]),'EQUALS':([28,38,52,55,56,88,],[50,-89,-89,-69,90,-70,]),'OR':([59,60,61,63,64,66,67,69,91,92,93,107,108,119,120,121,122,123,124,127,128,141,142,143,144,],[-73,-80,-78,-83,-84,-89,-76,-82,-79,-85,-81,132,132,-75,-74,-77,-71,-72,-25,-66,132,-65,-64,-62,-63,]),'INT_VAR':([0,1,5,7,9,16,17,24,27,30,34,35,36,41,43,44,46,62,70,77,98,100,111,112,114,116,117,135,136,139,145,146,147,148,149,150,159,160,161,162,163,164,],[8,-5,-3,-4,8,8,-10,8,-20,-52,-21,8,-51,-44,-45,-39,8,-24,-22,-13,-23,-50,-8,-9,8,8,-67,-6,-7,-68,-55,-56,-44,-54,-53,-59,-48,-49,-58,-47,-46,-57,]),'OPERATOR':([59,60,61,63,64,66,67,69,91,92,93,106,119,120,121,122,123,124,129,],[-73,-80,-78,-83,-84,-89,-76,-82,-79,-85,-81,130,-75,-74,-77,-71,-72,-25,130,]),'LCURVE':([6,16,27,30,34,35,36,37,41,43,44,62,70,75,84,98,100,110,117,133,134,139,145,146,147,148,149,150,155,156,159,160,161,162,163,164,],[16,37,-20,-52,-21,37,-51,37,-44,-45,-39,-24,-22,37,-12,-23,-50,-11,-67,37,37,-68,-55,-56,-44,-54,-53,-59,37,37,-48,-49,-58,-47,-46,-57,]),'FLOAT_VAR':([0,1,5,7,9,16,17,24,27,30,34,35,36,41,43,44,46,62,70,77,98,100,111,112,114,116,117,135,136,139,145,146,147,148,149,150,159,160,161,162,163,164,],[2,-5,-3,-4,2,2,-10,2,-20,-52,-21,2,-51,-44,-45,-39,2,-24,-22,-13,-23,-50,-8,-9,2,2,-67,-6,-7,-68,-55,-56,-44,-54,-53,-59,-48,-49,-58,-47,-46,-57,]),'COMMA':([2,8,13,14,19,22,25,26,49,59,60,61,63,64,66,67,69,72,80,85,86,91,92,93,103,119,120,121,122,123,124,137,140,151,152,153,],[-31,-30,-42,-17,45,-41,-43,-16,-17,-73,-80,-78,-83,-84,-89,-76,-82,-41,-40,114,116,-79,-85,-81,126,-75,-74,-77,-71,-72,-25,-17,126,-17,114,116,]),'SEMICOLON':([13,19,22,25,31,32,59,60,61,63,64,66,67,68,69,72,80,83,84,87,91,92,93,109,110,118,119,120,121,122,123,124,133,134,155,156,],[-42,44,-41,-43,62,70,-73,-80,-78,-83,-84,-89,-76,98,-82,-41,-40,111,112,117,-79,-85,-81,135,136,139,-75,-74,-77,-71,-72,-25,146,148,159,162,]),'IDENTIFIER':([2,3,8,10,14,16,21,27,29,30,31,33,34,35,36,37,41,43,44,45,49,50,51,53,54,57,58,62,65,70,71,75,76,78,79,89,90,94,95,97,98,99,100,104,105,117,126,130,131,132,133,134,138,139,145,146,147,148,149,150,155,156,159,160,161,162,163,164,],[-31,13,-30,13,13,38,13,-20,52,-52,66,13,-21,38,-51,52,-44,-45,-39,13,13,66,52,-88,-87,66,66,-24,66,-22,13,52,66,66,66,-86,66,66,66,66,-23,66,-50,66,66,-67,66,66,66,66,52,52,13,-68,-55,-56,-44,-54,-53,-59,52,52,-48,-49,-58,-47,-46,-57,]),'INT':([31,50,58,65,76,78,79,90,94,95,97,99,104,105,126,130,131,132,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'IF':([16,27,30,34,35,36,37,41,43,44,62,70,75,98,100,117,133,134,139,145,146,147,148,149,150,155,156,159,160,161,162,163,164,],[40,-20,-52,-21,40,-51,40,-44,-45,-39,-24,-22,40,-23,-50,-67,40,40,-68,-55,-56,-44,-54,-53,-59,40,40,-48,-49,-58,-47,-46,-57,]),'WHILE':([16,27,30,34,35,36,37,41,43,44,62,70,75,98,100,117,133,134,139,145,146,147,148,149,150,155,156,159,160,161,162,163,164,],[42,-20,-52,-21,42,-51,42,-44,-45,-39,-24,-22,42,-23,-50,-67,42,42,-68,-55,-56,-44,-54,-53,-59,42,42,-48,-49,-58,-47,-46,-57,]),'RPAREN':([2,8,13,14,24,25,26,46,47,48,49,59,60,61,63,64,66,67,69,76,81,82,85,86,91,92,93,96,102,103,107,108,113,115,119,120,121,122,123,124,125,127,128,129,137,140,141,142,143,144,151,152,153,154,157,158,],[-31,-30,-42,-17,-36,-43,-16,-36,83,84,-17,-73,-80,-78,-83,-84,-89,-76,-82,-27,109,110,-34,-38,-79,-85,-81,121,124,-29,133,134,-32,-35,-75,-74,-77,-71,-72,-25,-26,-66,141,121,-17,-29,-65,-64,-62,-63,-17,-34,-38,-28,-33,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'star_ampersand':([29,31,50,54,58,65,76,78,79,90,94,95,97,99,104,105,126,130,131,132,],[51,57,57,89,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'fn_defn2':([6,],[17,]),'declaration':([0,9,16,35,],[5,5,27,27,]),'stmt_list':([37,75,],[74,101,]),'fn_call_args_list':([103,140,],[125,154,]),'fn_defn1':([0,9,],[6,6,]),'dec_multiple_arg':([85,152,],[113,157,]),'program':([0,9,],[4,18,]),'return_stmt':([16,35,37,75,133,134,155,156,],[30,30,30,30,30,30,30,30,]),'variable':([3,10,14,21,33,45,49,71,138,],[15,22,25,25,72,80,86,25,153,]),'star':([3,10,14,21,49,137,151,],[11,11,26,26,85,152,26,]),'list':([10,33,],[19,19,]),'fn_declaration':([0,9,],[7,7,]),'fn_call':([16,31,35,50,57,58,65,76,78,79,90,94,95,97,99,104,105,126,130,131,132,],[32,64,32,64,92,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'type':([0,9,16,24,35,46,114,116,],[10,10,33,49,33,49,137,138,]),'stmt':([16,35,37,75,133,],[34,34,75,75,145,]),'fn_line':([16,35,],[35,35,]),'fn_definition':([0,9,],[1,1,]),'expr':([16,35,37,75,133,134,155,156,],[36,36,36,36,36,36,36,36,]),'fn_name':([3,10,],[12,20,]),'E2':([31,50,65,76,78,79,90,97,99,104,105,126,130,131,132,],[59,59,59,59,59,59,59,122,123,59,59,59,59,59,59,]),'dec_arg_list':([24,46,],[47,81,]),'fn_call_args':([76,],[102,]),'arg_list':([24,46,],[48,82,]),'multiple_arg':([86,153,],[115,158,]),'condition':([78,79,104,105,131,132,],[107,108,127,128,143,144,]),'left_side':([29,],[56,]),'fn_body':([16,35,],[39,73,]),'id':([16,29,31,35,37,50,51,57,58,65,75,76,78,79,90,94,95,97,99,104,105,126,130,131,132,133,134,155,156,],[28,55,60,28,28,60,88,91,60,60,28,60,60,60,60,60,60,60,60,60,60,60,60,60,60,28,28,28,28,]),'matched_stmt':([16,35,37,75,133,134,155,156,],[41,41,41,41,147,149,160,163,]),'E3':([31,50,65,76,78,79,90,94,95,97,99,104,105,126,130,131,132,],[67,67,67,67,67,67,67,119,120,67,67,67,67,67,67,67,67,]),'E1':([31,50,65,76,78,79,90,104,105,126,130,131,132,],[68,87,96,103,106,106,118,106,129,140,142,106,106,]),'mixed_id':([31,50,58,65,76,78,79,90,94,95,97,99,104,105,126,130,131,132,],[61,61,93,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'basic_block':([0,9,],[9,9,]),'unmatched_stmt':([16,35,37,75,133,134,155,156,],[43,43,43,43,43,150,161,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> basic_block program','program',2,'p_program','Parser.py',115),
  ('program -> basic_block','program',1,'p_program','Parser.py',116),
  ('basic_block -> declaration','basic_block',1,'p_basic_block','Parser.py',121),
  ('basic_block -> fn_declaration','basic_block',1,'p_basic_block','Parser.py',122),
  ('basic_block -> fn_definition','basic_block',1,'p_basic_block','Parser.py',123),
  ('fn_declaration -> type fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',128),
  ('fn_declaration -> type fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',129),
  ('fn_declaration -> VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',130),
  ('fn_declaration -> VOID fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',131),
  ('fn_definition -> fn_defn1 fn_defn2','fn_definition',2,'p_fn_definition','Parser.py',160),
  ('fn_defn1 -> type fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',177),
  ('fn_defn1 -> VOID fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',178),
  ('fn_defn2 -> LCURVE fn_body RCURVE','fn_defn2',3,'p_fn_defn2','Parser.py',244),
  ('fn_name -> star MAIN','fn_name',2,'p_fn_name','Parser.py',263),
  ('fn_name -> variable','fn_name',1,'p_fn_name','Parser.py',264),
  ('star -> STAR star','star',2,'p_star','Parser.py',274),
  ('star -> <empty>','star',0,'p_star','Parser.py',275),
  ('fn_body -> fn_line fn_body','fn_body',2,'p_fn_body','Parser.py',284),
  ('fn_body -> <empty>','fn_body',0,'p_fn_body','Parser.py',285),
  ('fn_line -> declaration','fn_line',1,'p_fn_line','Parser.py',290),
  ('fn_line -> stmt','fn_line',1,'p_fn_line','Parser.py',291),
  ('fn_line -> fn_call SEMICOLON','fn_line',2,'p_fn_line','Parser.py',292),
  ('return_stmt -> RETURN E1 SEMICOLON','return_stmt',3,'p_return_stmt','Parser.py',301),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','Parser.py',302),
  ('fn_call -> IDENTIFIER LPAREN fn_call_args RPAREN','fn_call',4,'p_fn_call','Parser.py',357),
  ('fn_call_args -> E1 fn_call_args_list','fn_call_args',2,'p_fn_call_args','Parser.py',386),
  ('fn_call_args -> <empty>','fn_call_args',0,'p_fn_call_args','Parser.py',387),
  ('fn_call_args_list -> COMMA E1 fn_call_args_list','fn_call_args_list',3,'p_fn_call_args_list','Parser.py',402),
  ('fn_call_args_list -> <empty>','fn_call_args_list',0,'p_fn_call_args_list','Parser.py',403),
  ('type -> INT_VAR','type',1,'p_type','Parser.py',416),
  ('type -> FLOAT_VAR','type',1,'p_type','Parser.py',417),
  ('dec_arg_list -> type star dec_multiple_arg','dec_arg_list',3,'p_dec_arg_list','Parser.py',424),
  ('dec_multiple_arg -> COMMA type star dec_multiple_arg','dec_multiple_arg',4,'p_dec_multiple_arg','Parser.py',431),
  ('dec_multiple_arg -> <empty>','dec_multiple_arg',0,'p_dec_multiple_arg','Parser.py',432),
  ('arg_list -> type variable multiple_arg','arg_list',3,'p_arg_list','Parser.py',442),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list','Parser.py',443),
  ('multiple_arg -> COMMA type variable multiple_arg','multiple_arg',4,'p_multiple_arg','Parser.py',455),
  ('multiple_arg -> <empty>','multiple_arg',0,'p_multiple_arg','Parser.py',456),
  ('declaration -> type list SEMICOLON','declaration',3,'p_declaration','Parser.py',467),
  ('list -> list COMMA variable','list',3,'p_list','Parser.py',486),
  ('list -> variable','list',1,'p_list','Parser.py',487),
  ('variable -> IDENTIFIER','variable',1,'p_variable','Parser.py',505),
  ('variable -> STAR variable','variable',2,'p_variable','Parser.py',506),
  ('stmt -> matched_stmt','stmt',1,'p_stmt','Parser.py',517),
  ('stmt -> unmatched_stmt','stmt',1,'p_stmt','Parser.py',518),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',525),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',526),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',527),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',528),
  ('matched_stmt -> LCURVE stmt_list RCURVE','matched_stmt',3,'p_matched_stmt','Parser.py',529),
  ('matched_stmt -> expr','matched_stmt',1,'p_matched_stmt','Parser.py',530),
  ('matched_stmt -> return_stmt','matched_stmt',1,'p_matched_stmt','Parser.py',531),
  ('matched_stmt -> WHILE LPAREN condition RPAREN matched_stmt','matched_stmt',5,'p_matched_stmt','Parser.py',532),
  ('matched_stmt -> WHILE LPAREN condition RPAREN SEMICOLON','matched_stmt',5,'p_matched_stmt','Parser.py',533),
  ('unmatched_stmt -> IF LPAREN condition RPAREN stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',565),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',566),
  ('unmatched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',567),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',568),
  ('unmatched_stmt -> WHILE LPAREN condition RPAREN unmatched_stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',569),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','Parser.py',596),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','Parser.py',597),
  ('condition -> condition AND condition','condition',3,'p_condition','Parser.py',624),
  ('condition -> condition OR condition','condition',3,'p_condition','Parser.py',625),
  ('condition -> E1 OPERATOR E1','condition',3,'p_condition','Parser.py',626),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','Parser.py',627),
  ('condition -> NOT condition','condition',2,'p_condition','Parser.py',628),
  ('expr -> id EQUALS E1 SEMICOLON','expr',4,'p_expr','Parser.py',661),
  ('expr -> STAR left_side EQUALS E1 SEMICOLON','expr',5,'p_expr','Parser.py',662),
  ('left_side -> id','left_side',1,'p_left_side','Parser.py',692),
  ('left_side -> star_ampersand id','left_side',2,'p_left_side','Parser.py',693),
  ('E1 -> E1 PLUS E2','E1',3,'p_E1','Parser.py',703),
  ('E1 -> E1 MINUS E2','E1',3,'p_E1','Parser.py',704),
  ('E1 -> E2','E1',1,'p_E1','Parser.py',705),
  ('E2 -> E2 STAR E3','E2',3,'p_E2','Parser.py',726),
  ('E2 -> E2 DIVIDE E3','E2',3,'p_E2','Parser.py',727),
  ('E2 -> E3','E2',1,'p_E2','Parser.py',728),
  ('E3 -> LPAREN E1 RPAREN','E3',3,'p_E3','Parser.py',752),
  ('E3 -> mixed_id','E3',1,'p_E3','Parser.py',753),
  ('mixed_id -> star_ampersand id','mixed_id',2,'p_mixed_id','Parser.py',809),
  ('mixed_id -> id','mixed_id',1,'p_mixed_id','Parser.py',810),
  ('mixed_id -> MINUS mixed_id','mixed_id',2,'p_mixed_id','Parser.py',811),
  ('mixed_id -> INT','mixed_id',1,'p_mixed_id','Parser.py',812),
  ('mixed_id -> FLOAT','mixed_id',1,'p_mixed_id','Parser.py',813),
  ('mixed_id -> fn_call','mixed_id',1,'p_mixed_id','Parser.py',814),
  ('mixed_id -> star_ampersand fn_call','mixed_id',2,'p_mixed_id','Parser.py',815),
  ('star_ampersand -> STAR star_ampersand','star_ampersand',2,'p_star_ampersand','Parser.py',846),
  ('star_ampersand -> STAR','star_ampersand',1,'p_star_ampersand','Parser.py',847),
  ('star_ampersand -> AMPERSAND','star_ampersand',1,'p_star_ampersand','Parser.py',848),
  ('id -> IDENTIFIER','id',1,'p_id','Parser.py',889),
]
