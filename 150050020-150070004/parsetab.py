
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightUMINUSIDENTIFIER INT FLOAT EQUALS LPAREN RPAREN LCURVE RCURVE MAIN SEMICOLON COMMA STAR AMPERSAND PLUS MINUS DIVIDE IF ELSE AND OR NOT WHILE OPERATOR RETURN INT_VAR FLOAT_VAR VOID\n\tprogram : basic_block program\n\t\t\t| basic_block\n\t\n\tbasic_block : declaration\n\t\t\t\t| fn_declaration\n\t\t\t\t| fn_definition\n\t\n\tfn_declaration : type fn_name LPAREN dec_arg_list RPAREN SEMICOLON\n\t\t\t\t| type fn_name LPAREN arg_list RPAREN SEMICOLON\n\t\t\t\t| VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON\n\t\t\t\t| VOID fn_name LPAREN arg_list RPAREN SEMICOLON\n\t\n\tfn_definition : fn_defn1 fn_defn2\n\t\n\tfn_defn1 : type fn_name LPAREN arg_list RPAREN\n\t\t| VOID fn_name LPAREN arg_list RPAREN\n\t\n\tfn_defn2 : LCURVE fn_body RCURVE\n\t\n\tfn_name : star MAIN\n\t\t\t| variable\n\t\n\tstar : STAR star\n\t\t|\n\t\n\tfn_body : fn_line fn_body\n\t\t\t| \n\t\n\tfn_line : declaration\n\t\t\t| stmt\n\t\t\t| fn_call SEMICOLON\n\t\n\treturn_stmt : RETURN E1 SEMICOLON\n\t\t\t\t| RETURN SEMICOLON\n\t\n\tfn_call : IDENTIFIER LPAREN fn_call_args RPAREN \n\t\n\tfn_call_args : E1 fn_call_args_list\n\t\t\t\t|\n\t\n\tfn_call_args_list : COMMA E1 fn_call_args_list\n\t\t\t\t\t| \n\t\n\ttype : INT_VAR\n\t\t| FLOAT_VAR\n\t\n\tdec_arg_list : type star dec_multiple_arg \n\t\n\tdec_multiple_arg : COMMA type star dec_multiple_arg\n\t\t\t\t| \n\t\n\targ_list : type variable multiple_arg\n\t\t\t| \n\t\n\tmultiple_arg : COMMA type variable multiple_arg\n\t\t\t\t| \n\t\n\tdeclaration : type list SEMICOLON\n\t\n\tlist : list COMMA variable\n\t\t| variable\n\t\n\tvariable : IDENTIFIER\n\t\t\t| STAR variable\n\t\n\tstmt : matched_stmt\n\t\t| unmatched_stmt\n\t\n\tmatched_stmt : IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt\n\t\t\t\t| IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt\n\t\t\t\t| LCURVE stmt_list RCURVE\n\t\t\t\t| expr\n\t\t\t\t| return_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN matched_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN SEMICOLON\n\t\n\tunmatched_stmt : IF LPAREN condition RPAREN stmt\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON\n\t\t\t\t| IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt\n\t\t\t\t| IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt\n\t\t\t\t| WHILE LPAREN condition RPAREN unmatched_stmt\n\t\n\tstmt_list : stmt stmt_list\n\t\t\t| stmt\n\t\n\tcondition : condition AND condition\n\t\t\t| condition OR condition\n\t\t\t| E1 OPERATOR E1 \n\t\t\t| LPAREN condition RPAREN\n\t\t\t| NOT condition\n\t\n\texpr : id EQUALS E1 SEMICOLON\n\t\t| STAR left_side EQUALS E1 SEMICOLON\n\t\n\tleft_side : id\n\t\t\t| star_ampersand id\n\t\n\tE1 : E1 PLUS E2\n\t\t| E1 MINUS E2\n\t\t| E2\n\t\n\tE2 : E2 STAR E3\n\t\t| E2 DIVIDE E3\n\t\t| E3\n\t\n\tE3 : LPAREN E1 RPAREN\n\t\t| mixed_id\n\t\n\tmixed_id : star_ampersand id\n\t\t\t| id\n\t\t\t| MINUS mixed_id %prec UMINUS\n\t\t\t| INT\n\t\t\t| FLOAT\n\t\t\t| fn_call\n\t\t\t| star_ampersand fn_call\n\t\n\tstar_ampersand : STAR star_ampersand\n\t\t\t\t\t| STAR\n\t\t\t\t\t| AMPERSAND\n\t\n\tid : IDENTIFIER\n\t'
    
_lr_action_items = {'INT':([33,52,59,66,68,73,76,84,85,89,91,92,98,99,111,112,117,127,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'AND':([60,61,62,64,67,69,70,72,83,90,95,96,97,114,116,120,121,122,123,124,128,137,138,142,143,],[-82,-83,-84,-78,-89,-80,-76,-73,112,112,-81,-79,-85,112,-66,-72,-71,-77,-75,-74,-25,112,-62,-65,-64,]),'PLUS':([60,61,62,64,65,67,69,70,72,86,94,95,96,97,100,103,115,118,120,121,122,123,124,128,143,148,],[-82,-83,-84,-78,92,-89,-80,-76,-73,92,92,-81,-79,-85,92,92,92,92,-72,-71,-77,-75,-74,-25,92,92,]),'WHILE':([11,23,24,26,31,35,36,37,39,43,47,63,75,93,101,113,119,125,139,140,141,144,145,146,147,151,152,157,158,159,160,161,162,],[32,-45,-44,32,-20,-21,-51,32,-52,-39,-22,-24,32,-23,-50,32,32,-67,-44,-56,-55,-68,-53,-59,-54,32,32,-57,-46,-47,-58,-49,-48,]),'RCURVE':([11,23,24,26,27,31,35,36,39,43,47,48,63,74,75,93,101,102,125,139,140,141,144,145,146,147,157,158,159,160,161,162,],[-19,-45,-44,-19,49,-20,-21,-51,-52,-39,-22,-18,-24,101,-61,-23,-50,-60,-67,-44,-56,-55,-68,-53,-59,-54,-57,-46,-47,-58,-49,-48,]),'OPERATOR':([60,61,62,64,67,69,70,72,86,95,96,97,115,120,121,122,123,124,128,],[-82,-83,-84,-78,-89,-80,-76,-73,117,-81,-79,-85,117,-72,-71,-77,-75,-74,-25,]),'LPAREN':([15,16,18,19,20,29,32,33,38,40,45,52,59,66,67,73,76,84,85,89,91,92,98,99,111,112,117,127,],[44,-15,-42,46,-15,52,59,66,76,-43,-14,84,84,66,76,66,66,84,84,66,66,66,66,66,84,84,66,66,]),'EQUALS':([34,38,53,57,58,88,],[73,-89,-69,-89,89,-70,]),'MINUS':([33,52,59,60,61,62,64,65,66,67,68,69,70,72,73,76,84,85,86,89,91,92,94,95,96,97,98,99,100,103,111,112,115,117,118,120,121,122,123,124,127,128,143,148,],[68,68,68,-82,-83,-84,-78,91,68,-89,68,-80,-76,-73,68,68,68,68,91,68,68,68,91,-81,-79,-85,68,68,91,91,68,68,91,68,91,-72,-71,-77,-75,-74,68,-25,91,91,]),'NOT':([52,59,84,85,111,112,],[85,85,85,85,85,85,]),'COMMA':([2,8,14,16,18,21,40,41,50,60,61,62,64,67,69,70,72,77,80,95,96,97,103,107,108,120,121,122,123,124,128,148,150,154,155,156,],[-31,-30,42,-41,-42,-17,-43,-16,-41,-82,-83,-84,-78,-89,-80,-76,-73,-40,-17,-81,-79,-85,127,131,133,-72,-71,-77,-75,-74,-25,127,-17,131,-17,133,]),'DIVIDE':([60,61,62,64,67,69,70,72,95,96,97,120,121,122,123,124,128,],[-82,-83,-84,-78,-89,-80,-76,98,-81,-79,-85,98,98,-77,-75,-74,-25,]),'OR':([60,61,62,64,67,69,70,72,83,90,95,96,97,114,116,120,121,122,123,124,128,137,138,142,143,],[-82,-83,-84,-78,-89,-80,-76,-73,111,111,-81,-79,-85,111,-66,-72,-71,-77,-75,-74,-25,-63,-62,-65,-64,]),'VOID':([0,1,3,9,10,12,43,49,129,130,135,136,],[7,-3,-4,-5,7,-10,-39,-13,-6,-7,-8,-9,]),'INT_VAR':([0,1,3,9,10,11,12,23,24,26,31,35,36,39,43,44,46,47,49,63,93,101,125,129,130,131,133,135,136,139,140,141,144,145,146,147,157,158,159,160,161,162,],[8,-3,-4,-5,8,8,-10,-45,-44,8,-20,-21,-51,-52,-39,8,8,-22,-13,-24,-23,-50,-67,-6,-7,8,8,-8,-9,-44,-56,-55,-68,-53,-59,-54,-57,-46,-47,-58,-49,-48,]),'FLOAT_VAR':([0,1,3,9,10,11,12,23,24,26,31,35,36,39,43,44,46,47,49,63,93,101,125,129,130,131,133,135,136,139,140,141,144,145,146,147,157,158,159,160,161,162,],[2,-3,-4,-5,2,2,-10,-45,-44,2,-20,-21,-51,-52,-39,2,2,-22,-13,-24,-23,-50,-67,-6,-7,2,2,-8,-9,-44,-56,-55,-68,-53,-59,-54,-57,-46,-47,-58,-49,-48,]),'IF':([11,23,24,26,31,35,36,37,39,43,47,63,75,93,101,113,119,125,139,140,141,144,145,146,147,151,152,157,158,159,160,161,162,],[29,-45,-44,29,-20,-21,-51,29,-52,-39,-22,-24,29,-23,-50,29,29,-67,-44,-56,-55,-68,-53,-59,-54,29,29,-57,-46,-47,-58,-49,-48,]),'STAR':([2,5,7,8,11,13,21,23,24,26,28,30,31,33,35,36,37,39,42,43,47,51,52,54,59,60,61,62,63,64,66,67,68,69,70,72,73,75,76,80,84,85,89,91,92,93,95,96,97,98,99,101,111,112,113,117,119,120,121,122,123,124,125,127,128,139,140,141,144,145,146,147,149,150,151,152,155,157,158,159,160,161,162,],[-31,13,21,-30,30,13,21,-45,-44,30,51,54,-20,54,-21,-51,30,-52,51,-39,-22,51,54,54,54,-82,-83,-84,-24,-78,54,-89,54,-80,-76,99,54,30,54,21,54,54,54,54,54,-23,-81,-79,-85,54,54,-50,54,54,30,54,30,99,99,-77,-75,-74,-67,54,-25,-44,-56,-55,-68,-53,-59,-54,51,155,30,30,155,-57,-46,-47,-58,-49,-48,]),'SEMICOLON':([14,16,18,25,33,40,50,60,61,62,64,65,67,69,70,72,77,95,96,97,100,105,106,109,110,113,118,119,120,121,122,123,124,128,151,152,],[43,-41,-42,47,63,-43,-41,-82,-83,-84,-78,93,-89,-80,-76,-73,-40,-81,-79,-85,125,129,130,135,136,140,144,147,-72,-71,-77,-75,-74,-25,159,162,]),'$end':([1,3,6,9,10,12,22,43,49,129,130,135,136,],[-3,-4,0,-5,-2,-10,-1,-39,-13,-6,-7,-8,-9,]),'MAIN':([2,5,7,8,13,17,21,41,],[-31,-17,-17,-30,-17,45,-17,-16,]),'RETURN':([11,23,24,26,31,35,36,37,39,43,47,63,75,93,101,113,119,125,139,140,141,144,145,146,147,151,152,157,158,159,160,161,162,],[33,-45,-44,33,-20,-21,-51,33,-52,-39,-22,-24,33,-23,-50,33,33,-67,-44,-56,-55,-68,-53,-59,-54,33,33,-57,-46,-47,-58,-49,-48,]),'AMPERSAND':([30,33,52,54,59,66,68,73,76,84,85,89,91,92,98,99,111,112,117,127,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'RPAREN':([2,8,18,21,40,41,44,46,60,61,62,64,67,69,70,72,76,78,79,80,81,82,83,90,94,95,96,97,103,104,107,108,114,115,116,120,121,122,123,124,126,128,132,134,137,138,142,143,148,150,153,154,155,156,163,164,],[-31,-30,-42,-17,-43,-16,-36,-36,-82,-83,-84,-78,-89,-80,-76,-73,-27,105,106,-17,109,110,113,119,122,-81,-79,-85,-29,128,-38,-34,142,122,-66,-72,-71,-77,-75,-74,-26,-25,-35,-32,-63,-62,-65,-64,-29,-17,-28,-38,-17,-34,-37,-33,]),'FLOAT':([33,52,59,66,68,73,76,84,85,89,91,92,98,99,111,112,117,127,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'ELSE':([36,39,63,93,101,125,139,140,144,145,147,158,159,161,162,],[-51,-52,-24,-23,-50,-67,151,152,-68,-53,-54,-46,-47,-49,-48,]),'LCURVE':([4,11,23,24,26,31,35,36,37,39,43,47,63,75,93,101,106,110,113,119,125,139,140,141,144,145,146,147,151,152,157,158,159,160,161,162,],[11,37,-45,-44,37,-20,-21,-51,37,-52,-39,-22,-24,37,-23,-50,-11,-12,37,37,-67,-44,-56,-55,-68,-53,-59,-54,37,37,-57,-46,-47,-58,-49,-48,]),'IDENTIFIER':([2,5,7,8,11,13,21,23,24,26,28,30,31,33,35,36,37,39,42,43,47,51,52,54,55,56,59,63,66,68,71,73,75,76,80,84,85,87,89,91,92,93,98,99,101,111,112,113,117,119,125,127,139,140,141,144,145,146,147,149,151,152,157,158,159,160,161,162,],[-31,18,18,-30,38,18,18,-45,-44,38,18,57,-20,67,-21,-51,57,-52,18,-39,-22,18,67,-87,-88,57,67,-24,67,67,67,67,57,67,18,67,67,-86,67,67,67,-23,67,67,-50,67,67,57,67,57,-67,67,-44,-56,-55,-68,-53,-59,-54,18,57,57,-57,-46,-47,-58,-49,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'unmatched_stmt':([11,26,37,75,113,119,151,152,],[23,23,23,23,23,146,157,160,]),'fn_body':([11,26,],[27,48,]),'matched_stmt':([11,26,37,75,113,119,151,152,],[24,24,24,24,139,145,158,161,]),'mixed_id':([33,52,59,66,68,73,76,84,85,89,91,92,98,99,111,112,117,127,],[64,64,64,64,95,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'condition':([52,59,84,85,111,112,],[83,90,114,116,137,138,]),'fn_line':([11,26,],[26,26,]),'list':([5,28,],[14,14,]),'fn_declaration':([0,10,],[3,3,]),'dec_arg_list':([44,46,],[78,81,]),'fn_call_args':([76,],[104,]),'fn_defn2':([4,],[12,]),'variable':([5,7,13,21,28,42,51,80,149,],[16,20,40,40,50,77,40,107,154,]),'fn_defn1':([0,10,],[4,4,]),'type':([0,10,11,26,44,46,131,133,],[5,5,28,28,80,80,149,150,]),'program':([0,10,],[6,22,]),'declaration':([0,10,11,26,],[1,1,31,31,]),'E2':([33,52,59,66,73,76,84,85,89,91,92,111,112,117,127,],[72,72,72,72,72,72,72,72,72,120,121,72,72,72,72,]),'multiple_arg':([107,154,],[132,163,]),'fn_call':([11,26,33,52,59,66,68,71,73,76,84,85,89,91,92,98,99,111,112,117,127,],[25,25,62,62,62,62,62,97,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'fn_call_args_list':([103,148,],[126,153,]),'E3':([33,52,59,66,73,76,84,85,89,91,92,98,99,111,112,117,127,],[70,70,70,70,70,70,70,70,70,70,70,123,124,70,70,70,70,]),'stmt_list':([37,75,],[74,102,]),'star_ampersand':([30,33,52,54,59,66,68,73,76,84,85,89,91,92,98,99,111,112,117,127,],[56,71,71,87,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'E1':([33,52,59,66,73,76,84,85,89,111,112,117,127,],[65,86,86,94,100,103,115,86,118,86,86,143,148,]),'fn_name':([5,7,],[15,19,]),'arg_list':([44,46,],[79,82,]),'dec_multiple_arg':([108,156,],[134,164,]),'id':([11,26,30,33,37,52,56,59,66,68,71,73,75,76,84,85,89,91,92,98,99,111,112,113,117,119,127,151,152,],[34,34,53,69,34,69,88,69,69,69,96,69,34,69,69,69,69,69,69,69,69,69,69,34,69,34,69,34,34,]),'stmt':([11,26,37,75,113,],[35,35,75,75,141,]),'return_stmt':([11,26,37,75,113,119,151,152,],[39,39,39,39,39,39,39,39,]),'expr':([11,26,37,75,113,119,151,152,],[36,36,36,36,36,36,36,36,]),'star':([5,7,13,21,80,150,155,],[17,17,41,41,108,156,41,]),'fn_definition':([0,10,],[9,9,]),'basic_block':([0,10,],[10,10,]),'left_side':([30,],[58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> basic_block program','program',2,'p_program','Parser.py',115),
  ('program -> basic_block','program',1,'p_program','Parser.py',116),
  ('basic_block -> declaration','basic_block',1,'p_basic_block','Parser.py',121),
  ('basic_block -> fn_declaration','basic_block',1,'p_basic_block','Parser.py',122),
  ('basic_block -> fn_definition','basic_block',1,'p_basic_block','Parser.py',123),
  ('fn_declaration -> type fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',128),
  ('fn_declaration -> type fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',129),
  ('fn_declaration -> VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',130),
  ('fn_declaration -> VOID fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',131),
  ('fn_definition -> fn_defn1 fn_defn2','fn_definition',2,'p_fn_definition','Parser.py',160),
  ('fn_defn1 -> type fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',177),
  ('fn_defn1 -> VOID fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',178),
  ('fn_defn2 -> LCURVE fn_body RCURVE','fn_defn2',3,'p_fn_defn2','Parser.py',244),
  ('fn_name -> star MAIN','fn_name',2,'p_fn_name','Parser.py',263),
  ('fn_name -> variable','fn_name',1,'p_fn_name','Parser.py',264),
  ('star -> STAR star','star',2,'p_star','Parser.py',274),
  ('star -> <empty>','star',0,'p_star','Parser.py',275),
  ('fn_body -> fn_line fn_body','fn_body',2,'p_fn_body','Parser.py',284),
  ('fn_body -> <empty>','fn_body',0,'p_fn_body','Parser.py',285),
  ('fn_line -> declaration','fn_line',1,'p_fn_line','Parser.py',290),
  ('fn_line -> stmt','fn_line',1,'p_fn_line','Parser.py',291),
  ('fn_line -> fn_call SEMICOLON','fn_line',2,'p_fn_line','Parser.py',292),
  ('return_stmt -> RETURN E1 SEMICOLON','return_stmt',3,'p_return_stmt','Parser.py',301),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','Parser.py',302),
  ('fn_call -> IDENTIFIER LPAREN fn_call_args RPAREN','fn_call',4,'p_fn_call','Parser.py',354),
  ('fn_call_args -> E1 fn_call_args_list','fn_call_args',2,'p_fn_call_args','Parser.py',383),
  ('fn_call_args -> <empty>','fn_call_args',0,'p_fn_call_args','Parser.py',384),
  ('fn_call_args_list -> COMMA E1 fn_call_args_list','fn_call_args_list',3,'p_fn_call_args_list','Parser.py',399),
  ('fn_call_args_list -> <empty>','fn_call_args_list',0,'p_fn_call_args_list','Parser.py',400),
  ('type -> INT_VAR','type',1,'p_type','Parser.py',413),
  ('type -> FLOAT_VAR','type',1,'p_type','Parser.py',414),
  ('dec_arg_list -> type star dec_multiple_arg','dec_arg_list',3,'p_dec_arg_list','Parser.py',421),
  ('dec_multiple_arg -> COMMA type star dec_multiple_arg','dec_multiple_arg',4,'p_dec_multiple_arg','Parser.py',428),
  ('dec_multiple_arg -> <empty>','dec_multiple_arg',0,'p_dec_multiple_arg','Parser.py',429),
  ('arg_list -> type variable multiple_arg','arg_list',3,'p_arg_list','Parser.py',439),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list','Parser.py',440),
  ('multiple_arg -> COMMA type variable multiple_arg','multiple_arg',4,'p_multiple_arg','Parser.py',452),
  ('multiple_arg -> <empty>','multiple_arg',0,'p_multiple_arg','Parser.py',453),
  ('declaration -> type list SEMICOLON','declaration',3,'p_declaration','Parser.py',464),
  ('list -> list COMMA variable','list',3,'p_list','Parser.py',483),
  ('list -> variable','list',1,'p_list','Parser.py',484),
  ('variable -> IDENTIFIER','variable',1,'p_variable','Parser.py',502),
  ('variable -> STAR variable','variable',2,'p_variable','Parser.py',503),
  ('stmt -> matched_stmt','stmt',1,'p_stmt','Parser.py',514),
  ('stmt -> unmatched_stmt','stmt',1,'p_stmt','Parser.py',515),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',522),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',523),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',524),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',525),
  ('matched_stmt -> LCURVE stmt_list RCURVE','matched_stmt',3,'p_matched_stmt','Parser.py',526),
  ('matched_stmt -> expr','matched_stmt',1,'p_matched_stmt','Parser.py',527),
  ('matched_stmt -> return_stmt','matched_stmt',1,'p_matched_stmt','Parser.py',528),
  ('matched_stmt -> WHILE LPAREN condition RPAREN matched_stmt','matched_stmt',5,'p_matched_stmt','Parser.py',529),
  ('matched_stmt -> WHILE LPAREN condition RPAREN SEMICOLON','matched_stmt',5,'p_matched_stmt','Parser.py',530),
  ('unmatched_stmt -> IF LPAREN condition RPAREN stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',562),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',563),
  ('unmatched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',564),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',565),
  ('unmatched_stmt -> WHILE LPAREN condition RPAREN unmatched_stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',566),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','Parser.py',593),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','Parser.py',594),
  ('condition -> condition AND condition','condition',3,'p_condition','Parser.py',621),
  ('condition -> condition OR condition','condition',3,'p_condition','Parser.py',622),
  ('condition -> E1 OPERATOR E1','condition',3,'p_condition','Parser.py',623),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','Parser.py',624),
  ('condition -> NOT condition','condition',2,'p_condition','Parser.py',625),
  ('expr -> id EQUALS E1 SEMICOLON','expr',4,'p_expr','Parser.py',658),
  ('expr -> STAR left_side EQUALS E1 SEMICOLON','expr',5,'p_expr','Parser.py',659),
  ('left_side -> id','left_side',1,'p_left_side','Parser.py',689),
  ('left_side -> star_ampersand id','left_side',2,'p_left_side','Parser.py',690),
  ('E1 -> E1 PLUS E2','E1',3,'p_E1','Parser.py',700),
  ('E1 -> E1 MINUS E2','E1',3,'p_E1','Parser.py',701),
  ('E1 -> E2','E1',1,'p_E1','Parser.py',702),
  ('E2 -> E2 STAR E3','E2',3,'p_E2','Parser.py',723),
  ('E2 -> E2 DIVIDE E3','E2',3,'p_E2','Parser.py',724),
  ('E2 -> E3','E2',1,'p_E2','Parser.py',725),
  ('E3 -> LPAREN E1 RPAREN','E3',3,'p_E3','Parser.py',749),
  ('E3 -> mixed_id','E3',1,'p_E3','Parser.py',750),
  ('mixed_id -> star_ampersand id','mixed_id',2,'p_mixed_id','Parser.py',806),
  ('mixed_id -> id','mixed_id',1,'p_mixed_id','Parser.py',807),
  ('mixed_id -> MINUS mixed_id','mixed_id',2,'p_mixed_id','Parser.py',808),
  ('mixed_id -> INT','mixed_id',1,'p_mixed_id','Parser.py',809),
  ('mixed_id -> FLOAT','mixed_id',1,'p_mixed_id','Parser.py',810),
  ('mixed_id -> fn_call','mixed_id',1,'p_mixed_id','Parser.py',811),
  ('mixed_id -> star_ampersand fn_call','mixed_id',2,'p_mixed_id','Parser.py',812),
  ('star_ampersand -> STAR star_ampersand','star_ampersand',2,'p_star_ampersand','Parser.py',843),
  ('star_ampersand -> STAR','star_ampersand',1,'p_star_ampersand','Parser.py',844),
  ('star_ampersand -> AMPERSAND','star_ampersand',1,'p_star_ampersand','Parser.py',845),
  ('id -> IDENTIFIER','id',1,'p_id','Parser.py',886),
]
