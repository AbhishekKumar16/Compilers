	 text	# The .text assembler directive indicates
	 .globl main	# The following is the code
f:
# Prologue begins
	 sw $ra, 0($sp)	# Save the return address
	 sw $fp, -4($sp)	# Save the frame pointer
	 sub $fp, $sp, 8	# Update the frame pointer
	 sub $sp, $sp, 16	# Make space for the locals
label0:
c = &m
	 j label1

label1:
	 lw $s0, 4($sp)
	 move $v1, $s0 # move return value to $v1
	 j epilogue_f
# Epilogue begins
epilogue_f:
	 add $sp, $sp,16
	 lw $fp, -4($sp)
	 lw $ra, 0($sp)
	 jr $ra	# Jump back to the called procedure
# Epilogue ends
	 text	# The .text assembler directive indicates
	 .globl main	# The following is the code
main:
# Prologue begins
	 sw $ra, 0($sp)	# Save the return address
	 sw $fp, -4($sp)	# Save the frame pointer
	 sub $fp, $sp, 8	# Update the frame pointer
	 sub $sp, $sp, 24	# Make space for the locals
label2:
px = &x
py = &y
*px = 2
*py = 3
p = f(*px, *py)
	 j label3

label3:
	 j epilogue_main
# Epilogue begins
epilogue_main:
	 add $sp, $sp,24
	 lw $fp, -4($sp)
	 lw $ra, 0($sp)
	 jr $ra	# Jump back to the called procedure
# Epilogue ends
