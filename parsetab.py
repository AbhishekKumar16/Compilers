
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '81B1896417680B4D9CC6E5BE2137ECE3'
    
_lr_action_items = {'MAIN':([2,5,6,8,14,15,18,24,],[-30,-31,-17,-17,-17,25,-17,-16,]),'RETURN':([22,27,30,33,35,36,38,40,43,46,68,73,82,92,109,131,134,136,143,144,145,147,148,149,150,155,156,159,160,161,162,163,164,],[31,-39,31,-45,-52,-44,-51,-20,-21,31,-24,-22,31,-23,-50,31,-67,31,-54,-59,-53,-68,-56,-55,-44,31,31,-58,-48,-49,-47,-57,-46,]),'INT_VAR':([0,1,4,7,10,21,22,26,27,29,30,33,35,36,38,40,43,68,73,80,92,109,111,112,114,115,117,118,134,143,144,145,147,148,149,150,159,160,161,162,163,164,],[2,-5,2,-3,-4,-10,2,2,-39,2,2,-45,-52,-44,-51,-20,-21,-24,-22,-13,-23,-50,-8,-9,2,2,-6,-7,-67,-54,-59,-53,-68,-56,-55,-44,-58,-48,-49,-47,-57,-46,]),'PLUS':([55,58,60,61,62,63,64,65,69,89,90,97,98,99,101,105,119,120,121,122,123,126,132,135,139,140,],[-89,93,-84,-83,-80,-73,-78,-82,-76,-79,-85,-81,93,93,93,93,-72,-71,-74,-75,-77,-25,93,93,93,93,]),'NOT':([72,79,102,104,129,130,],[102,102,102,102,102,102,]),'AND':([55,60,61,62,63,64,65,69,89,90,97,103,108,119,120,121,122,123,126,128,133,140,141,142,146,],[-89,-84,-83,-80,-73,-78,-82,-76,-79,-85,-81,129,129,-72,-71,-74,-75,-77,-25,-66,129,-64,-62,129,-65,]),'OR':([55,60,61,62,63,64,65,69,89,90,97,103,108,119,120,121,122,123,126,128,133,140,141,142,146,],[-89,-84,-83,-80,-73,-78,-82,-76,-79,-85,-81,130,130,-72,-71,-74,-75,-77,-25,-66,130,-64,-62,-63,-65,]),'AMPERSAND':([31,42,59,66,67,70,72,74,79,91,93,95,96,102,104,107,124,127,129,130,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'MINUS':([31,55,58,60,61,62,63,64,65,66,67,69,70,72,74,79,89,90,91,93,95,96,97,98,99,101,102,104,105,107,119,120,121,122,123,124,126,127,129,130,132,135,139,140,],[66,-89,91,-84,-83,-80,-73,-78,-82,66,66,-76,66,66,66,66,-79,-85,66,66,66,66,-81,91,91,91,66,66,91,66,-72,-71,-74,-75,-77,66,-25,66,66,66,91,91,91,91,]),'EQUALS':([32,41,75,76,78,106,],[-89,74,-69,-89,107,-70,]),'SEMICOLON':([13,17,19,23,31,39,50,55,58,60,61,62,63,64,65,69,71,83,84,87,88,89,90,97,105,119,120,121,122,123,126,131,135,136,155,156,],[-42,-41,27,-43,68,73,-40,-89,92,-84,-83,-80,-73,-78,-82,-76,-41,111,112,117,118,-79,-85,-81,134,-72,-71,-74,-75,-77,-25,143,147,148,160,162,]),'$end':([1,3,4,7,10,11,21,27,80,111,112,117,118,],[-5,0,-2,-3,-4,-1,-10,-39,-13,-8,-9,-6,-7,]),'IF':([22,27,30,33,35,36,38,40,43,46,68,73,82,92,109,131,134,136,143,144,145,147,148,149,150,155,156,159,160,161,162,163,164,],[44,-39,44,-45,-52,-44,-51,-20,-21,44,-24,-22,44,-23,-50,44,-67,44,-54,-59,-53,-68,-56,-55,-44,44,44,-58,-48,-49,-47,-57,-46,]),'FLOAT':([31,66,67,70,72,74,79,91,93,95,96,102,104,107,124,127,129,130,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'IDENTIFIER':([2,5,6,8,14,18,22,27,28,30,31,33,34,35,36,38,40,42,43,46,49,51,56,57,59,66,67,68,70,72,73,74,77,79,82,91,92,93,94,95,96,102,104,107,109,124,127,129,130,131,134,136,137,143,144,145,147,148,149,150,155,156,159,160,161,162,163,164,],[-30,-31,13,13,13,13,32,-39,13,32,55,-45,13,-52,-44,-51,-20,76,-21,76,13,13,-88,55,-87,55,55,-24,55,55,-22,55,76,55,76,55,-23,55,-86,55,55,55,55,55,-50,55,55,55,55,76,-67,76,13,-54,-59,-53,-68,-56,-55,-44,76,76,-58,-48,-49,-47,-57,-46,]),'RCURVE':([22,27,30,33,35,36,38,40,43,45,54,68,73,81,82,92,109,110,134,143,144,145,147,148,149,150,159,160,161,162,163,164,],[-19,-39,-19,-45,-52,-44,-51,-20,-21,80,-18,-24,-22,109,-61,-23,-50,-60,-67,-54,-59,-53,-68,-56,-55,-44,-58,-48,-49,-47,-57,-46,]),'DIVIDE':([55,60,61,62,63,64,65,69,89,90,97,119,120,121,122,123,126,],[-89,-84,-83,-80,96,-78,-82,-76,-79,-85,-81,96,96,-74,-75,-77,-25,]),'COMMA':([2,5,13,14,17,19,23,24,49,50,55,60,61,62,63,64,65,69,71,85,86,89,90,97,99,119,120,121,122,123,126,138,139,151,152,153,],[-30,-31,-42,-17,-41,28,-43,-16,-17,-40,-89,-84,-83,-80,-73,-78,-82,-76,-41,114,115,-79,-85,-81,124,-72,-71,-74,-75,-77,-25,-17,124,114,-17,115,]),'FLOAT_VAR':([0,1,4,7,10,21,22,26,27,29,30,33,35,36,38,40,43,68,73,80,92,109,111,112,114,115,117,118,134,143,144,145,147,148,149,150,159,160,161,162,163,164,],[5,-5,5,-3,-4,-10,5,5,-39,5,5,-45,-52,-44,-51,-20,-21,-24,-22,-13,-23,-50,-8,-9,5,5,-6,-7,-67,-54,-59,-53,-68,-56,-55,-44,-58,-48,-49,-47,-57,-46,]),'WHILE':([22,27,30,33,35,36,38,40,43,46,68,73,82,92,109,131,134,136,143,144,145,147,148,149,150,155,156,159,160,161,162,163,164,],[37,-39,37,-45,-52,-44,-51,-20,-21,37,-24,-22,37,-23,-50,37,-67,37,-54,-59,-53,-68,-56,-55,-44,37,37,-58,-48,-49,-47,-57,-46,]),'STAR':([2,5,6,8,14,18,22,27,28,30,31,33,34,35,36,38,40,42,43,46,49,51,55,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,79,82,89,90,91,92,93,95,96,97,102,104,107,109,119,120,121,122,123,124,126,127,129,130,131,134,136,137,138,143,144,145,147,148,149,150,152,155,156,159,160,161,162,163,164,],[-30,-31,14,18,14,18,42,-39,51,42,59,-45,51,-52,-44,-51,-20,59,-21,42,14,51,-89,59,-84,-83,-80,95,-78,-82,59,59,-24,-76,59,59,-22,59,59,42,-79,-85,59,-23,59,59,59,-81,59,59,59,-50,95,95,-74,-75,-77,59,-25,59,59,59,42,-67,42,51,152,-54,-59,-53,-68,-56,-55,-44,152,42,42,-58,-48,-49,-47,-57,-46,]),'VOID':([0,1,4,7,10,21,27,80,111,112,117,118,],[6,-5,6,-3,-4,-10,-39,-13,-8,-9,-6,-7,]),'OPERATOR':([55,60,61,62,63,64,65,69,89,90,97,101,119,120,121,122,123,126,132,],[-89,-84,-83,-80,-73,-78,-82,-76,-79,-85,-81,127,-72,-71,-74,-75,-77,-25,127,]),'INT':([31,66,67,70,72,74,79,91,93,95,96,102,104,107,124,127,129,130,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'LPAREN':([12,13,16,17,20,23,25,31,32,37,44,55,67,70,72,74,79,91,93,95,96,102,104,107,124,127,129,130,],[-15,-42,26,-15,29,-43,-14,67,70,72,79,70,67,67,104,67,104,67,67,67,67,104,104,67,67,67,104,104,]),'ELSE':([35,38,68,92,109,134,143,145,147,148,150,160,161,162,164,],[-52,-51,-24,-23,-50,-67,-54,-53,-68,155,156,-48,-49,-47,-46,]),'LCURVE':([9,22,27,30,33,35,36,38,40,43,46,68,73,82,84,88,92,109,131,134,136,143,144,145,147,148,149,150,155,156,159,160,161,162,163,164,],[22,46,-39,46,-45,-52,-44,-51,-20,-21,46,-24,-22,46,-12,-11,-23,-50,46,-67,46,-54,-59,-53,-68,-56,-55,-44,46,46,-58,-48,-49,-47,-57,-46,]),'RPAREN':([2,5,13,14,23,24,26,29,47,48,49,52,53,55,60,61,62,63,64,65,69,70,85,86,89,90,97,98,99,100,103,108,113,116,119,120,121,122,123,125,126,128,132,133,138,139,140,141,142,146,151,152,153,154,157,158,],[-30,-31,-42,-17,-43,-16,-36,-36,83,84,-17,87,88,-89,-84,-83,-80,-73,-78,-82,-76,-27,-38,-34,-79,-85,-81,123,-29,126,131,136,-35,-32,-72,-71,-74,-75,-77,-26,-25,-66,123,146,-17,-29,-64,-62,-63,-65,-38,-17,-34,-28,-37,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fn_definition':([0,4,],[1,1,]),'variable':([6,8,14,18,28,34,49,51,137,],[12,17,23,23,50,71,85,23,151,]),'fn_call':([22,30,31,57,66,67,70,72,74,79,91,93,95,96,102,104,107,124,127,129,130,],[39,39,60,90,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'basic_block':([0,4,],[4,4,]),'E1':([31,67,70,72,74,79,102,104,107,124,127,129,130,],[58,98,99,101,105,101,101,132,135,139,140,101,101,]),'fn_line':([22,30,],[30,30,]),'fn_call_args_list':([99,139,],[125,154,]),'fn_defn2':([9,],[21,]),'list':([8,34,],[19,19,]),'dec_arg_list':([26,29,],[47,52,]),'return_stmt':([22,30,46,82,131,136,155,156,],[35,35,35,35,35,35,35,35,]),'E2':([31,67,70,72,74,79,91,93,102,104,107,124,127,129,130,],[63,63,63,63,63,63,119,120,63,63,63,63,63,63,63,]),'mixed_id':([31,66,67,70,72,74,79,91,93,95,96,102,104,107,124,127,129,130,],[64,97,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'condition':([72,79,102,104,129,130,],[103,108,128,133,141,142,]),'type':([0,4,22,26,29,30,114,115,],[8,8,34,49,49,34,137,138,]),'stmt':([22,30,46,82,136,],[43,43,82,82,149,]),'unmatched_stmt':([22,30,46,82,131,136,155,156,],[33,33,33,33,144,33,159,163,]),'fn_declaration':([0,4,],[10,10,]),'matched_stmt':([22,30,46,82,131,136,155,156,],[36,36,36,36,145,150,161,164,]),'fn_call_args':([70,],[100,]),'E3':([31,67,70,72,74,79,91,93,95,96,102,104,107,124,127,129,130,],[69,69,69,69,69,69,69,69,121,122,69,69,69,69,69,69,69,]),'arg_list':([26,29,],[48,53,]),'star_ampersand':([31,42,59,66,67,70,72,74,79,91,93,95,96,102,104,107,124,127,129,130,],[57,77,94,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'expr':([22,30,46,82,131,136,155,156,],[38,38,38,38,38,38,38,38,]),'program':([0,4,],[3,11,]),'stmt_list':([46,82,],[81,110,]),'declaration':([0,4,22,30,],[7,7,40,40,]),'id':([22,30,31,42,46,57,66,67,70,72,74,77,79,82,91,93,95,96,102,104,107,124,127,129,130,131,136,155,156,],[41,41,62,75,41,89,62,62,62,62,62,106,62,41,62,62,62,62,62,62,62,62,62,62,62,41,41,41,41,]),'star':([6,8,14,18,49,138,152,],[15,15,24,24,86,153,24,]),'fn_body':([22,30,],[45,54,]),'fn_defn1':([0,4,],[9,9,]),'multiple_arg':([85,151,],[113,157,]),'dec_multiple_arg':([86,153,],[116,158,]),'left_side':([42,],[78,]),'fn_name':([6,8,],[16,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> basic_block program','program',2,'p_program','Parser.py',111),
  ('program -> basic_block','program',1,'p_program','Parser.py',112),
  ('basic_block -> declaration','basic_block',1,'p_basic_block','Parser.py',117),
  ('basic_block -> fn_declaration','basic_block',1,'p_basic_block','Parser.py',118),
  ('basic_block -> fn_definition','basic_block',1,'p_basic_block','Parser.py',119),
  ('fn_declaration -> type fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',124),
  ('fn_declaration -> type fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',125),
  ('fn_declaration -> VOID fn_name LPAREN dec_arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',126),
  ('fn_declaration -> VOID fn_name LPAREN arg_list RPAREN SEMICOLON','fn_declaration',6,'p_fn_declaration','Parser.py',127),
  ('fn_definition -> fn_defn1 fn_defn2','fn_definition',2,'p_fn_definition','Parser.py',156),
  ('fn_defn1 -> type fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',173),
  ('fn_defn1 -> VOID fn_name LPAREN arg_list RPAREN','fn_defn1',5,'p_fn_defn1','Parser.py',174),
  ('fn_defn2 -> LCURVE fn_body RCURVE','fn_defn2',3,'p_fn_defn2','Parser.py',240),
  ('fn_name -> star MAIN','fn_name',2,'p_fn_name','Parser.py',259),
  ('fn_name -> variable','fn_name',1,'p_fn_name','Parser.py',260),
  ('star -> STAR star','star',2,'p_star','Parser.py',270),
  ('star -> <empty>','star',0,'p_star','Parser.py',271),
  ('fn_body -> fn_line fn_body','fn_body',2,'p_fn_body','Parser.py',280),
  ('fn_body -> <empty>','fn_body',0,'p_fn_body','Parser.py',281),
  ('fn_line -> declaration','fn_line',1,'p_fn_line','Parser.py',286),
  ('fn_line -> stmt','fn_line',1,'p_fn_line','Parser.py',287),
  ('fn_line -> fn_call SEMICOLON','fn_line',2,'p_fn_line','Parser.py',288),
  ('return_stmt -> RETURN E1 SEMICOLON','return_stmt',3,'p_return_stmt','Parser.py',297),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','Parser.py',298),
  ('fn_call -> IDENTIFIER LPAREN fn_call_args RPAREN','fn_call',4,'p_fn_call','Parser.py',350),
  ('fn_call_args -> E1 fn_call_args_list','fn_call_args',2,'p_fn_call_args','Parser.py',381),
  ('fn_call_args -> <empty>','fn_call_args',0,'p_fn_call_args','Parser.py',382),
  ('fn_call_args_list -> COMMA E1 fn_call_args_list','fn_call_args_list',3,'p_fn_call_args_list','Parser.py',397),
  ('fn_call_args_list -> <empty>','fn_call_args_list',0,'p_fn_call_args_list','Parser.py',398),
  ('type -> INT_VAR','type',1,'p_type','Parser.py',411),
  ('type -> FLOAT_VAR','type',1,'p_type','Parser.py',412),
  ('dec_arg_list -> type star dec_multiple_arg','dec_arg_list',3,'p_dec_arg_list','Parser.py',419),
  ('dec_multiple_arg -> COMMA type star dec_multiple_arg','dec_multiple_arg',4,'p_dec_multiple_arg','Parser.py',426),
  ('dec_multiple_arg -> <empty>','dec_multiple_arg',0,'p_dec_multiple_arg','Parser.py',427),
  ('arg_list -> type variable multiple_arg','arg_list',3,'p_arg_list','Parser.py',437),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list','Parser.py',438),
  ('multiple_arg -> COMMA type variable multiple_arg','multiple_arg',4,'p_multiple_arg','Parser.py',450),
  ('multiple_arg -> <empty>','multiple_arg',0,'p_multiple_arg','Parser.py',451),
  ('declaration -> type list SEMICOLON','declaration',3,'p_declaration','Parser.py',462),
  ('list -> list COMMA variable','list',3,'p_list','Parser.py',481),
  ('list -> variable','list',1,'p_list','Parser.py',482),
  ('variable -> IDENTIFIER','variable',1,'p_variable','Parser.py',500),
  ('variable -> STAR variable','variable',2,'p_variable','Parser.py',501),
  ('stmt -> matched_stmt','stmt',1,'p_stmt','Parser.py',512),
  ('stmt -> unmatched_stmt','stmt',1,'p_stmt','Parser.py',513),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',520),
  ('matched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',521),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE SEMICOLON','matched_stmt',7,'p_matched_stmt','Parser.py',522),
  ('matched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE matched_stmt','matched_stmt',7,'p_matched_stmt','Parser.py',523),
  ('matched_stmt -> LCURVE stmt_list RCURVE','matched_stmt',3,'p_matched_stmt','Parser.py',524),
  ('matched_stmt -> expr','matched_stmt',1,'p_matched_stmt','Parser.py',525),
  ('matched_stmt -> return_stmt','matched_stmt',1,'p_matched_stmt','Parser.py',526),
  ('matched_stmt -> WHILE LPAREN condition RPAREN matched_stmt','matched_stmt',5,'p_matched_stmt','Parser.py',527),
  ('matched_stmt -> WHILE LPAREN condition RPAREN SEMICOLON','matched_stmt',5,'p_matched_stmt','Parser.py',528),
  ('unmatched_stmt -> IF LPAREN condition RPAREN stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',560),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',561),
  ('unmatched_stmt -> IF LPAREN condition RPAREN matched_stmt ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',562),
  ('unmatched_stmt -> IF LPAREN condition RPAREN SEMICOLON ELSE unmatched_stmt','unmatched_stmt',7,'p_unmatched_stmt','Parser.py',563),
  ('unmatched_stmt -> WHILE LPAREN condition RPAREN unmatched_stmt','unmatched_stmt',5,'p_unmatched_stmt','Parser.py',564),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','Parser.py',591),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','Parser.py',592),
  ('condition -> condition AND condition','condition',3,'p_condition','Parser.py',619),
  ('condition -> condition OR condition','condition',3,'p_condition','Parser.py',620),
  ('condition -> E1 OPERATOR E1','condition',3,'p_condition','Parser.py',621),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','Parser.py',622),
  ('condition -> NOT condition','condition',2,'p_condition','Parser.py',623),
  ('expr -> id EQUALS E1 SEMICOLON','expr',4,'p_expr','Parser.py',656),
  ('expr -> STAR left_side EQUALS E1 SEMICOLON','expr',5,'p_expr','Parser.py',657),
  ('left_side -> id','left_side',1,'p_left_side','Parser.py',687),
  ('left_side -> star_ampersand id','left_side',2,'p_left_side','Parser.py',688),
  ('E1 -> E1 PLUS E2','E1',3,'p_E1','Parser.py',698),
  ('E1 -> E1 MINUS E2','E1',3,'p_E1','Parser.py',699),
  ('E1 -> E2','E1',1,'p_E1','Parser.py',700),
  ('E2 -> E2 STAR E3','E2',3,'p_E2','Parser.py',721),
  ('E2 -> E2 DIVIDE E3','E2',3,'p_E2','Parser.py',722),
  ('E2 -> E3','E2',1,'p_E2','Parser.py',723),
  ('E3 -> LPAREN E1 RPAREN','E3',3,'p_E3','Parser.py',747),
  ('E3 -> mixed_id','E3',1,'p_E3','Parser.py',748),
  ('mixed_id -> star_ampersand id','mixed_id',2,'p_mixed_id','Parser.py',804),
  ('mixed_id -> id','mixed_id',1,'p_mixed_id','Parser.py',805),
  ('mixed_id -> MINUS mixed_id','mixed_id',2,'p_mixed_id','Parser.py',806),
  ('mixed_id -> INT','mixed_id',1,'p_mixed_id','Parser.py',807),
  ('mixed_id -> FLOAT','mixed_id',1,'p_mixed_id','Parser.py',808),
  ('mixed_id -> fn_call','mixed_id',1,'p_mixed_id','Parser.py',809),
  ('mixed_id -> star_ampersand fn_call','mixed_id',2,'p_mixed_id','Parser.py',810),
  ('star_ampersand -> STAR star_ampersand','star_ampersand',2,'p_star_ampersand','Parser.py',841),
  ('star_ampersand -> STAR','star_ampersand',1,'p_star_ampersand','Parser.py',842),
  ('star_ampersand -> AMPERSAND','star_ampersand',1,'p_star_ampersand','Parser.py',843),
  ('id -> IDENTIFIER','id',1,'p_id','Parser.py',884),
]
